{"version":3,"file":"generate.js","sourceRoot":"","sources":["../../../../lib/workers/repository/updates/generate.ts"],"names":[],"mappings":"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","sourcesContent":["import { DateTime } from 'luxon';\nimport mdTable from 'markdown-table';\nimport semver from 'semver';\nimport { mergeChildConfig } from '../../../config';\nimport { CONFIG_SECRETS_EXPOSED } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { sanitize } from '../../../util/sanitize';\nimport * as template from '../../../util/template';\nimport { BranchConfig, BranchUpgradeConfig } from '../../common';\n\nfunction isTypesGroup(branchUpgrades: any[]): boolean {\n  return (\n    branchUpgrades.some(({ depName }) => depName?.startsWith('@types/')) &&\n    new Set(\n      branchUpgrades.map(({ depName }) => depName?.replace(/^@types\\//, ''))\n    ).size === 1\n  );\n}\n\nfunction sortTypesGroup(upgrades: BranchUpgradeConfig[]): void {\n  const isTypesUpgrade = ({ depName }: BranchUpgradeConfig): boolean =>\n    depName?.startsWith('@types/');\n  const regularUpgrades = upgrades.filter(\n    (upgrade) => !isTypesUpgrade(upgrade)\n  );\n  const typesUpgrades = upgrades.filter(isTypesUpgrade);\n  upgrades.splice(0, upgrades.length);\n  upgrades.push(...regularUpgrades, ...typesUpgrades);\n}\n\nfunction getTableValues(\n  upgrade: BranchUpgradeConfig\n): [string, string, string, string] | null {\n  if (!upgrade.commitBodyTable) {\n    return null;\n  }\n  const {\n    datasource,\n    lookupName,\n    depName,\n    fromVersion,\n    toVersion,\n    displayFrom,\n    displayTo,\n  } = upgrade;\n  const name = lookupName || depName;\n  const from = fromVersion || displayFrom;\n  const to = toVersion || displayTo;\n  if (datasource && name && from && to) {\n    return [datasource, name, from, to];\n  }\n  logger.debug(\n    {\n      datasource,\n      lookupName,\n      depName,\n      fromVersion,\n      toVersion,\n      displayFrom,\n      displayTo,\n    },\n    'Cannot determine table values'\n  );\n  return null;\n}\n\nexport function generateBranchConfig(\n  branchUpgrades: BranchUpgradeConfig[]\n): BranchConfig {\n  logger.trace({ config: branchUpgrades }, 'generateBranchConfig');\n  let config: BranchConfig = {\n    upgrades: [],\n  } as any;\n  const hasGroupName = branchUpgrades[0].groupName !== null;\n  logger.trace(`hasGroupName: ${hasGroupName}`);\n  // Use group settings only if multiple upgrades or lazy grouping is disabled\n  const depNames: string[] = [];\n  const newValue: string[] = [];\n  const toVersions: string[] = [];\n  branchUpgrades.forEach((upg) => {\n    if (!depNames.includes(upg.depName)) {\n      depNames.push(upg.depName);\n    }\n    if (!toVersions.includes(upg.toVersion)) {\n      toVersions.push(upg.toVersion);\n    }\n    if (upg.commitMessageExtra) {\n      const extra = template.compile(upg.commitMessageExtra, upg);\n      if (!newValue.includes(extra)) {\n        newValue.push(extra);\n      }\n    }\n  });\n  const groupEligible =\n    depNames.length > 1 ||\n    toVersions.length > 1 ||\n    (!toVersions[0] && newValue.length > 1) ||\n    branchUpgrades[0].lazyGrouping === false;\n  if (newValue.length > 1 && !groupEligible) {\n    // eslint-disable-next-line no-param-reassign\n    branchUpgrades[0].commitMessageExtra = `to v${toVersions[0]}`;\n  }\n  const typesGroup =\n    depNames.length > 1 && !hasGroupName && isTypesGroup(branchUpgrades);\n  logger.trace(`groupEligible: ${groupEligible}`);\n  const useGroupSettings = hasGroupName && groupEligible;\n  logger.trace(`useGroupSettings: ${useGroupSettings}`);\n  let releaseTimestamp: string;\n  for (const branchUpgrade of branchUpgrades) {\n    let upgrade: BranchUpgradeConfig = { ...branchUpgrade };\n    if (upgrade.currentDigest) {\n      upgrade.currentDigestShort =\n        upgrade.currentDigestShort ||\n        upgrade.currentDigest.replace('sha256:', '').substring(0, 7);\n    }\n    if (upgrade.newDigest) {\n      upgrade.newDigestShort =\n        upgrade.newDigestShort ||\n        upgrade.newDigest.replace('sha256:', '').substring(0, 7);\n    }\n    if (!upgrade.displayFrom) {\n      if (upgrade.currentValue === upgrade.newValue) {\n        upgrade.displayFrom =\n          upgrade.currentDigestShort || upgrade.currentVersion || '';\n        upgrade.displayTo =\n          upgrade.displayTo ||\n          upgrade.newDigestShort ||\n          upgrade.newVersion ||\n          '';\n      } else {\n        upgrade.displayFrom =\n          upgrade.currentValue ||\n          upgrade.currentVersion ||\n          upgrade.currentDigestShort ||\n          '';\n        upgrade.displayTo =\n          upgrade.displayTo ||\n          upgrade.newValue ||\n          upgrade.newVersion ||\n          upgrade.newDigestShort ||\n          '';\n      }\n    }\n\n    if (\n      upgrade.updateType !== 'lockFileMaintenance' &&\n      upgrade.displayFrom.length * upgrade.displayTo.length === 0\n    ) {\n      logger.debug({ config: upgrade }, 'empty displayFrom/displayTo');\n    }\n    upgrade.prettyDepType =\n      upgrade.prettyDepType || upgrade.depType || 'dependency';\n    if (useGroupSettings) {\n      // Now overwrite original config with group config\n      upgrade = mergeChildConfig(upgrade, upgrade.group);\n      upgrade.isGroup = true;\n    } else {\n      delete upgrade.groupName;\n    }\n    // Delete group config regardless of whether it was applied\n    delete upgrade.group;\n    delete upgrade.lazyGrouping;\n\n    // istanbul ignore else\n    if (toVersions.length > 1 && !typesGroup) {\n      logger.trace({ toVersions });\n      delete upgrade.commitMessageExtra;\n      upgrade.recreateClosed = true;\n    } else if (newValue.length > 1 && upgrade.isDigest) {\n      logger.trace({ newValue });\n      delete upgrade.commitMessageExtra;\n      upgrade.recreateClosed = true;\n    } else if (semver.valid(toVersions[0])) {\n      upgrade.isRange = false;\n    }\n    // Use templates to generate strings\n    logger.trace('Compiling branchName: ' + upgrade.branchName);\n    upgrade.branchName = template.compile(upgrade.branchName, upgrade);\n    if (upgrade.semanticCommits && !upgrade.commitMessagePrefix) {\n      logger.trace('Upgrade has semantic commits enabled');\n      let semanticPrefix = upgrade.semanticCommitType;\n      if (upgrade.semanticCommitScope) {\n        semanticPrefix += `(${template.compile(\n          upgrade.semanticCommitScope,\n          upgrade\n        )})`;\n      }\n      upgrade.commitMessagePrefix = semanticPrefix;\n      upgrade.commitMessagePrefix += semanticPrefix.endsWith(':') ? ' ' : ': ';\n      upgrade.toLowerCase =\n        // eslint-disable-next-line @typescript-eslint/prefer-regexp-exec\n        upgrade.semanticCommitType.match(/[A-Z]/) === null &&\n        !upgrade.semanticCommitType.startsWith(':');\n    }\n    // Compile a few times in case there are nested templates\n    upgrade.commitMessage = template.compile(\n      upgrade.commitMessage || '',\n      upgrade\n    );\n    upgrade.commitMessage = template.compile(upgrade.commitMessage, upgrade);\n    upgrade.commitMessage = template.compile(upgrade.commitMessage, upgrade);\n    // istanbul ignore if\n    if (upgrade.commitMessage !== sanitize(upgrade.commitMessage)) {\n      throw new Error(CONFIG_SECRETS_EXPOSED);\n    }\n    upgrade.commitMessage = upgrade.commitMessage.trim(); // Trim exterior whitespace\n    upgrade.commitMessage = upgrade.commitMessage.replace(/\\s+/g, ' '); // Trim extra whitespace inside string\n    upgrade.commitMessage = upgrade.commitMessage.replace(\n      /to vv(\\d)/,\n      'to v$1'\n    );\n    if (upgrade.toLowerCase) {\n      // We only need to lowercvase the first line\n      const splitMessage = upgrade.commitMessage.split('\\n');\n      splitMessage[0] = splitMessage[0].toLowerCase();\n      upgrade.commitMessage = splitMessage.join('\\n');\n    }\n    if (upgrade.commitBody) {\n      upgrade.commitMessage = `${upgrade.commitMessage}\\n\\n${template.compile(\n        upgrade.commitBody,\n        upgrade\n      )}`;\n    }\n    logger.trace(`commitMessage: ` + JSON.stringify(upgrade.commitMessage));\n    if (upgrade.prTitle) {\n      upgrade.prTitle = template.compile(upgrade.prTitle, upgrade);\n      upgrade.prTitle = template.compile(upgrade.prTitle, upgrade);\n      upgrade.prTitle = template\n        .compile(upgrade.prTitle, upgrade)\n        .trim()\n        .replace(/\\s+/g, ' ');\n      // istanbul ignore if\n      if (upgrade.prTitle !== sanitize(upgrade.prTitle)) {\n        throw new Error(CONFIG_SECRETS_EXPOSED);\n      }\n      if (upgrade.toLowerCase) {\n        upgrade.prTitle = upgrade.prTitle.toLowerCase();\n      }\n    } else {\n      [upgrade.prTitle] = upgrade.commitMessage.split('\\n');\n    }\n    upgrade.prTitle += upgrade.hasBaseBranches ? ' ({{baseBranch}})' : '';\n    if (upgrade.isGroup) {\n      upgrade.prTitle +=\n        upgrade.updateType === 'major' && upgrade.separateMajorMinor\n          ? ' (major)'\n          : '';\n      upgrade.prTitle +=\n        upgrade.updateType === 'minor' && upgrade.separateMinorPatch\n          ? ' (minor)'\n          : '';\n      upgrade.prTitle += upgrade.updateType === 'patch' ? ' (patch)' : '';\n    }\n    // Compile again to allow for nested templates\n    upgrade.prTitle = template.compile(upgrade.prTitle, upgrade);\n    logger.trace(`prTitle: ` + JSON.stringify(upgrade.prTitle));\n    config.upgrades.push(upgrade);\n    if (upgrade.releaseTimestamp) {\n      if (releaseTimestamp) {\n        const existingStamp = DateTime.fromISO(releaseTimestamp);\n        const upgradeStamp = DateTime.fromISO(upgrade.releaseTimestamp);\n        if (upgradeStamp > existingStamp) {\n          releaseTimestamp = upgrade.releaseTimestamp; // eslint-disable-line\n        }\n      } else {\n        releaseTimestamp = upgrade.releaseTimestamp; // eslint-disable-line\n      }\n    }\n  }\n\n  if (typesGroup) {\n    if (config.upgrades[0].depName?.startsWith('@types/')) {\n      logger.debug('Found @types - reversing upgrades to use depName in PR');\n      sortTypesGroup(config.upgrades);\n      config.upgrades[0].recreateClosed = false;\n      config.hasTypes = true;\n    }\n  } else {\n    config.upgrades.sort((a, b) => {\n      if (a.fileReplacePosition && b.fileReplacePosition) {\n        // This is because we need to replace from the bottom of the file up\n        return a.fileReplacePosition > b.fileReplacePosition ? -1 : 1;\n      }\n      if (a.depName < b.depName) {\n        return -1;\n      }\n      if (a.depName > b.depName) {\n        return 1;\n      }\n      return 0;\n    });\n  }\n  // Now assign first upgrade's config as branch config\n  config = { ...config, ...config.upgrades[0], releaseTimestamp }; // TODO: fixme\n  config.canBeUnpublished = config.upgrades.some(\n    (upgrade) => upgrade.canBeUnpublished\n  );\n  config.reuseLockFiles = config.upgrades.every(\n    (upgrade) => upgrade.updateType !== 'lockFileMaintenance'\n  );\n  config.dependencyDashboardApproval = config.upgrades.some(\n    (upgrade) => upgrade.dependencyDashboardApproval\n  );\n  config.dependencyDashboardPrApproval = config.upgrades.some(\n    (upgrade) => upgrade.prCreation === 'approval'\n  );\n  config.automerge = config.upgrades.every((upgrade) => upgrade.automerge);\n  config.blockedByPin = config.upgrades.every(\n    (upgrade) => upgrade.blockedByPin\n  );\n  const tableRows = config.upgrades\n    .map((upgrade) => getTableValues(upgrade))\n    .filter(Boolean);\n  if (tableRows.length) {\n    let table = [];\n    table.push(['datasource', 'package', 'from', 'to']);\n    table = table.concat(tableRows);\n    config.commitMessage += '\\n\\n' + mdTable(table) + '\\n';\n  }\n  return config;\n}\n"]}