{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../lib/workers/repository/changelog/index.ts"],"names":[],"mappings":";;;;;;AAAA,kDAAyB;AAEzB,kDAAsD;AAEtD,uBAAuB;AACvB,KAAK,UAAU,cAAc,CAAC,OAAO;IACnC,OAAO,CAAC,OAAO,GAAG,MAAM,4BAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,sBAAsB;AAC3E,CAAC;AAED,uBAAuB;AAChB,KAAK,UAAU,eAAe,CACnC,cAAqD;IAErD,MAAM,QAAQ,GAAG,EAAE,CAAC;IACpB,KAAK,MAAM,UAAU,IAAI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE;QACpD,KAAK,MAAM,OAAO,IAAI,cAAc,CAAC,UAAU,CAAC,EAAE;YAChD,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACxB;KACF;IACD,MAAM,eAAI,CAAC,QAAQ,EAAE,cAAc,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC;AAC5D,CAAC;AAVD,0CAUC","sourcesContent":["import pMap from 'p-map';\nimport { BranchUpgradeConfig } from '../../common';\nimport { getChangeLogJSON } from '../../pr/changelog';\n\n// istanbul ignore next\nasync function embedChangelog(upgrade): Promise<void> {\n  upgrade.logJSON = await getChangeLogJSON(upgrade); // eslint-disable-line\n}\n\n// istanbul ignore next\nexport async function embedChangelogs(\n  branchUpgrades: Record<string, BranchUpgradeConfig[]>\n): Promise<void> {\n  const upgrades = [];\n  for (const branchName of Object.keys(branchUpgrades)) {\n    for (const upgrade of branchUpgrades[branchName]) {\n      upgrades.push(upgrade);\n    }\n  }\n  await pMap(upgrades, embedChangelog, { concurrency: 10 });\n}\n"]}