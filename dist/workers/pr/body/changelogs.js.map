{"version":3,"file":"changelogs.js","sourceRoot":"","sources":["../../../../lib/workers/pr/body/changelogs.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,iEAAmD;AAEnD,6EAAwD;AAExD,SAAgB,aAAa,CAAC,MAAoB;IAChD,IAAI,YAAY,GAAG,EAAE,CAAC;IACtB,qBAAqB;IACrB,IAAI,CAAC,MAAM,CAAC,eAAe,EAAE;QAC3B,OAAO,YAAY,CAAC;KACrB;IACD,YAAY;QACV,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,sBAAe,EAAE,MAAM,EAAE,KAAK,CAAC,GAAG,MAAM,CAAC;IAC5E,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,SAAS,CAAC,CAAC;IAC7D,qCAAqC;IAErC,2DAA2D;IAC3D,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,SAAS,EAAE,YAAY,CAAC,CAAC;IAC7D,iFAAiF;IACjF,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;IACtD,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IAC7D,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;IAC/D,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC;IAC1E,YAAY,GAAG,YAAY,CAAC,OAAO,CACjC,qCAAqC,EACrC,QAAQ,CACT,CAAC;IACF,YAAY,GAAG,YAAY,CAAC,OAAO,CACjC,wBAAwB,EACxB,gBAAgB,CACjB,CAAC;IACF,sCAAsC;IACtC,MAAM,UAAU,GAAG,uBAAuB,CAAC;IAC3C,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACxD,YAAY,GAAG,YAAY,CAAC,OAAO,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IACjE,OAAO,YAAY,CAAC;AACtB,CAAC;AA/BD,sCA+BC","sourcesContent":["import * as template from '../../../util/template';\nimport { BranchConfig } from '../../common';\nimport releaseNotesHbs from '../changelog/hbs-template';\n\nexport function getChangelogs(config: BranchConfig): string {\n  let releaseNotes = '';\n  // istanbul ignore if\n  if (!config.hasReleaseNotes) {\n    return releaseNotes;\n  }\n  releaseNotes +=\n    '\\n\\n---\\n\\n' + template.compile(releaseNotesHbs, config, false) + '\\n\\n';\n  releaseNotes = releaseNotes.replace(/### \\[`vv/g, '### [`v');\n  // Generic replacements/link-breakers\n\n  // Put a zero width space after every # followed by a digit\n  releaseNotes = releaseNotes.replace(/#(\\d)/gi, '#&#8203;$1');\n  // Put a zero width space after every @ symbol to prevent unintended hyperlinking\n  releaseNotes = releaseNotes.replace(/@/g, '@&#8203;');\n  releaseNotes = releaseNotes.replace(/(`\\[?@)&#8203;/g, '$1');\n  releaseNotes = releaseNotes.replace(/([a-z]@)&#8203;/gi, '$1');\n  releaseNotes = releaseNotes.replace(/\\/compare\\/@&#8203;/g, '/compare/@');\n  releaseNotes = releaseNotes.replace(\n    /(\\(https:\\/\\/[^)]*?)\\.\\.\\.@&#8203;/g,\n    '$1...@'\n  );\n  releaseNotes = releaseNotes.replace(\n    /([\\s(])#(\\d+)([)\\s]?)/g,\n    '$1#&#8203;$2$3'\n  );\n  // convert escaped backticks back to `\n  const backTickRe = /&#x60;([^/]*?)&#x60;/g;\n  releaseNotes = releaseNotes.replace(backTickRe, '`$1`');\n  releaseNotes = releaseNotes.replace(/`#&#8203;(\\d+)`/g, '`#$1`');\n  return releaseNotes;\n}\n"]}