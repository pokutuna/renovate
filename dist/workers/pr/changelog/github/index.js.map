{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../../../lib/workers/pr/changelog/github/index.ts"],"names":[],"mappings":"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","sourcesContent":["import changelogFilenameRegex from 'changelog-filename-regex';\nimport { logger } from '../../../../logger';\nimport {\n  GithubGitBlob,\n  GithubGitTree,\n} from '../../../../types/platform/github';\nimport { GithubHttp } from '../../../../util/http/github';\nimport { ensureTrailingSlash } from '../../../../util/url';\nimport { ChangeLogFile, ChangeLogNotes } from '../common';\n\nconst http = new GithubHttp();\n\nexport async function getTags(\n  endpoint: string,\n  repository: string\n): Promise<string[]> {\n  logger.trace('github.getTags()');\n  const url = `${endpoint}repos/${repository}/tags?per_page=100`;\n  try {\n    const res = await http.getJson<{ name: string }[]>(url, {\n      paginate: true,\n    });\n\n    const tags = res.body;\n\n    if (!tags.length) {\n      logger.debug({ repository }, 'repository has no Github tags');\n    }\n\n    return tags.map((tag) => tag.name).filter(Boolean);\n  } catch (err) {\n    logger.debug({ sourceRepo: repository }, 'Failed to fetch Github tags');\n    logger.debug({ err });\n    // istanbul ignore if\n    if (err.message && err.message.includes('Bad credentials')) {\n      logger.warn('Bad credentials triggering tag fail lookup in changelog');\n      throw err;\n    }\n    return [];\n  }\n}\n\nexport async function getReleaseNotesMd(\n  repository: string,\n  apiBaseUrl: string\n): Promise<ChangeLogFile> | null {\n  logger.trace('github.getReleaseNotesMd()');\n  const apiPrefix = `${ensureTrailingSlash(apiBaseUrl)}repos/${repository}`;\n  const { default_branch = 'master' } = (\n    await http.getJson<{ default_branch: string }>(apiPrefix)\n  ).body;\n\n  // https://docs.github.com/en/rest/reference/git#get-a-tree\n  const res = await http.getJson<GithubGitTree>(\n    `${apiPrefix}/git/trees/${default_branch}`\n  );\n\n  // istanbul ignore if\n  if (res.body.truncated) {\n    logger.debug({ repository }, 'Git tree truncated');\n  }\n\n  const files = res.body.tree\n    .filter((f) => f.type === 'blob')\n    .filter((f) => changelogFilenameRegex.test(f.path));\n\n  if (!files.length) {\n    logger.trace('no changelog file found');\n    return null;\n  }\n  const { path: changelogFile, sha } = files.shift();\n  /* istanbul ignore if */\n  if (files.length > 1) {\n    logger.debug(\n      `Multiple candidates for changelog file, using ${changelogFile}`\n    );\n  }\n\n  // https://docs.github.com/en/rest/reference/git#get-a-blob\n  const fileRes = await http.getJson<GithubGitBlob>(\n    `${apiPrefix}/git/blobs/${sha}`\n  );\n\n  const changelogMd =\n    Buffer.from(fileRes.body.content, 'base64').toString() + '\\n#\\n##';\n  return { changelogFile, changelogMd };\n}\n\nexport async function getReleaseList(\n  apiBaseUrl: string,\n  repository: string\n): Promise<ChangeLogNotes[]> {\n  logger.trace('github.getReleaseList()');\n  const url = `${ensureTrailingSlash(\n    apiBaseUrl\n  )}repos/${repository}/releases?per_page=100`;\n  const res = await http.getJson<\n    {\n      html_url: string;\n      id: number;\n      tag_name: string;\n      name: string;\n      body: string;\n    }[]\n  >(url, { paginate: true });\n  return res.body.map((release) => ({\n    url: release.html_url,\n    id: release.id,\n    tag: release.tag_name,\n    name: release.name,\n    body: release.body,\n  }));\n}\n"]}