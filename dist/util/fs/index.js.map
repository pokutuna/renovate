{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/util/fs/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6CAA+B;AAC/B,iCAAoC;AAEpC,yCAAsC;AAEtC,4CAA0B;AAE1B,IAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,IAAI,QAAQ,GAAG,EAAE,CAAC;AAElB,SAAgB,WAAW,CAAC,MAA+B;IACzD,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IAC3B,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;AAC7B,CAAC;AAHD,kCAGC;AAED,SAAgB,eAAe,CAAC,QAAgB;IAC9C,OAAO,aAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC;AAC7B,CAAC;AAFD,0CAEC;AAED,SAAgB,kBAAkB,CAChC,wBAAgC,EAChC,aAAqB;IAErB,MAAM,YAAY,GAAG,eAAe,CAAC,wBAAwB,CAAC,CAAC;IAC/D,OAAO,YAAI,CAAC,YAAY,EAAE,aAAa,CAAC,CAAC;AAC3C,CAAC;AAND,gDAMC;AAOM,KAAK,UAAU,aAAa,CACjC,QAAgB,EAChB,QAAiB;IAEjB,MAAM,aAAa,GAAG,YAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC/C,IAAI;QACF,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,QAAQ,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;QAC/D,OAAO,WAAW,CAAC;KACpB;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,0BAA0B,CAAC,CAAC;QAClD,OAAO,IAAI,CAAC;KACb;AACH,CAAC;AAZD,sCAYC;AAEM,KAAK,UAAU,cAAc,CAClC,QAAgB,EAChB,WAAmB;IAEnB,MAAM,aAAa,GAAG,YAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC/C,MAAM,EAAE,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC,CAAC;AAClD,CAAC;AAND,wCAMC;AAEM,KAAK,UAAU,eAAe,CAAC,QAAgB;IACpD,MAAM,aAAa,GAAG,YAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAC/C,MAAM,EAAE,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;AACjC,CAAC;AAHD,0CAGC;AAED,uBAAuB;AAChB,KAAK,UAAU,SAAS,CAAC,OAAO;IACrC,MAAM,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC9B,CAAC;AAFD,8BAEC;AAED,uBAAuB;AAChB,KAAK,UAAU,cAAc,CAAC,OAAO;IAC1C,MAAM,YAAY,GAAG,YAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAC7C,MAAM,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;AACnC,CAAC;AAHD,wCAGC;AAEM,KAAK,UAAU,cAAc,CAClC,OAAO,EACP,UAAmB;IAEnB,MAAM,eAAe,GAAG,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpE,MAAM,YAAY,GAAG,eAAe,IAAI,YAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAChE,MAAM,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IACjC,OAAO,YAAY,CAAC;AACtB,CAAC;AARD,wCAQC","sourcesContent":["import * as fs from 'fs-extra';\nimport { join, parse } from 'upath';\nimport { RenovateConfig } from '../../config/common';\nimport { logger } from '../../logger';\n\nexport * from './proxies';\n\nlet localDir = '';\nlet cacheDir = '';\n\nexport function setFsConfig(config: Partial<RenovateConfig>): void {\n  localDir = config.localDir;\n  cacheDir = config.cacheDir;\n}\n\nexport function getSubDirectory(fileName: string): string {\n  return parse(fileName).dir;\n}\n\nexport function getSiblingFileName(\n  existingFileNameWithPath: string,\n  otherFileName: string\n): string {\n  const subDirectory = getSubDirectory(existingFileNameWithPath);\n  return join(subDirectory, otherFileName);\n}\n\nexport async function readLocalFile(fileName: string): Promise<Buffer>;\nexport async function readLocalFile(\n  fileName: string,\n  encoding: 'utf8'\n): Promise<string>;\nexport async function readLocalFile(\n  fileName: string,\n  encoding?: string\n): Promise<string | Buffer> {\n  const localFileName = join(localDir, fileName);\n  try {\n    const fileContent = await fs.readFile(localFileName, encoding);\n    return fileContent;\n  } catch (err) {\n    logger.trace({ err }, 'Error reading local file');\n    return null;\n  }\n}\n\nexport async function writeLocalFile(\n  fileName: string,\n  fileContent: string\n): Promise<void> {\n  const localFileName = join(localDir, fileName);\n  await fs.outputFile(localFileName, fileContent);\n}\n\nexport async function deleteLocalFile(fileName: string): Promise<void> {\n  const localFileName = join(localDir, fileName);\n  await fs.remove(localFileName);\n}\n\n// istanbul ignore next\nexport async function ensureDir(dirName): Promise<void> {\n  await fs.ensureDir(dirName);\n}\n\n// istanbul ignore next\nexport async function ensureLocalDir(dirName): Promise<void> {\n  const localDirName = join(localDir, dirName);\n  await fs.ensureDir(localDirName);\n}\n\nexport async function ensureCacheDir(\n  dirName,\n  envPathVar?: string\n): Promise<string> {\n  const envCacheDirName = envPathVar ? process.env[envPathVar] : null;\n  const cacheDirName = envCacheDirName || join(cacheDir, dirName);\n  await fs.ensureDir(cacheDirName);\n  return cacheDirName;\n}\n"]}