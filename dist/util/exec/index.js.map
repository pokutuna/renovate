{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/util/exec/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExecOptions as ChildProcessExecOptions } from 'child_process';\nimport { dirname, join } from 'path';\nimport { RenovateConfig } from '../../config/common';\nimport { logger } from '../../logger';\nimport {\n  BinarySource,\n  DockerOptions,\n  ExecConfig,\n  ExecResult,\n  Opt,\n  RawExecOptions,\n  rawExec,\n} from './common';\nimport {\n  generateDockerCommand,\n  removeDanglingContainers,\n  removeDockerContainer,\n} from './docker';\nimport { getChildProcessEnv } from './env';\n\nconst execConfig: ExecConfig = {\n  binarySource: null,\n  dockerUser: null,\n  localDir: null,\n  cacheDir: null,\n};\n\nexport async function setExecConfig(\n  config: Partial<RenovateConfig>\n): Promise<void> {\n  for (const key of Object.keys(execConfig)) {\n    const value = config[key];\n    execConfig[key] = value || null;\n  }\n  if (execConfig.binarySource === 'docker') {\n    await removeDanglingContainers();\n  }\n}\n\ntype ExtraEnv<T = unknown> = Record<string, T>;\n\nexport interface ExecOptions extends ChildProcessExecOptions {\n  cwdFile?: string;\n  extraEnv?: Opt<ExtraEnv>;\n  docker?: Opt<DockerOptions>;\n}\n\nfunction createChildEnv(\n  env: NodeJS.ProcessEnv,\n  extraEnv: ExtraEnv\n): ExtraEnv<string> {\n  const extraEnvEntries = Object.entries({ ...extraEnv }).filter(([_, val]) => {\n    if (val === null) {\n      return false;\n    }\n    if (val === undefined) {\n      return false;\n    }\n    return true;\n  });\n  const extraEnvKeys = Object.keys(extraEnvEntries);\n\n  const childEnv =\n    env || extraEnv\n      ? {\n          ...extraEnv,\n          ...getChildProcessEnv(extraEnvKeys),\n          ...env,\n        }\n      : getChildProcessEnv();\n\n  const result: ExtraEnv<string> = {};\n  Object.entries(childEnv).forEach(([key, val]) => {\n    if (val === null) {\n      return;\n    }\n    if (val === undefined) {\n      return;\n    }\n    result[key] = val.toString();\n  });\n  return result;\n}\n\nfunction dockerEnvVars(\n  extraEnv: ExtraEnv,\n  childEnv: ExtraEnv<string>\n): string[] {\n  const extraEnvKeys = Object.keys(extraEnv || {});\n  return extraEnvKeys.filter(\n    (key) => typeof childEnv[key] === 'string' && childEnv[key].length > 0\n  );\n}\n\nexport async function exec(\n  cmd: string | string[],\n  opts: ExecOptions = {}\n): Promise<ExecResult> {\n  const { env, extraEnv, docker, cwdFile } = opts;\n  let cwd;\n  // istanbul ignore if\n  if (cwdFile) {\n    cwd = join(execConfig.localDir, dirname(cwdFile));\n  }\n  cwd = cwd || opts.cwd || execConfig.localDir;\n  const childEnv = createChildEnv(env, extraEnv);\n\n  const execOptions: ExecOptions = { ...opts };\n  delete execOptions.extraEnv;\n  delete execOptions.docker;\n  delete execOptions.cwdFile;\n\n  const rawExecOptions: RawExecOptions = {\n    encoding: 'utf-8',\n    ...execOptions,\n    env: childEnv,\n    cwd,\n  };\n  // Set default timeout to 15 minutes\n  rawExecOptions.timeout = rawExecOptions.timeout || 15 * 60 * 1000;\n\n  let commands = typeof cmd === 'string' ? [cmd] : cmd;\n  const useDocker = execConfig.binarySource === BinarySource.Docker && docker;\n  if (useDocker) {\n    logger.debug('Using docker to execute');\n    const dockerOptions = {\n      ...docker,\n      cwd,\n      envVars: dockerEnvVars(extraEnv, childEnv),\n    };\n\n    const dockerCommand = await generateDockerCommand(\n      commands,\n      dockerOptions,\n      execConfig\n    );\n    commands = [dockerCommand];\n  }\n\n  let res: ExecResult | null = null;\n  for (const rawExecCommand of commands) {\n    const startTime = Date.now();\n    let timer;\n    const { timeout } = rawExecOptions;\n    if (useDocker) {\n      await removeDockerContainer(docker.image);\n      // istanbul ignore next\n      timer = setTimeout(() => {\n        removeDockerContainer(docker.image); // eslint-disable-line\n        logger.info({ timeout, rawExecCommand }, 'Docker run timed out');\n      }, timeout);\n    }\n    logger.debug({ command: rawExecCommand }, 'Executing command');\n    logger.trace({ commandOptions: rawExecOptions }, 'Command options');\n    try {\n      res = await rawExec(rawExecCommand, rawExecOptions);\n    } catch (err) {\n      logger.trace({ err }, 'rawExec err');\n      clearTimeout(timer);\n      if (useDocker) {\n        await removeDockerContainer(docker.image).catch((removeErr) => {\n          throw new Error(\n            `Error: \"${removeErr.message}\" - Original Error: \"${err.message}\"`\n          );\n        });\n      }\n      throw err;\n    }\n    clearTimeout(timer);\n    const durationMs = Math.round(Date.now() - startTime);\n    if (res) {\n      logger.debug(\n        {\n          cmd: rawExecCommand,\n          durationMs,\n          stdout: res.stdout,\n          stderr: res.stderr,\n        },\n        'exec completed'\n      );\n    }\n  }\n\n  return res;\n}\n"]}