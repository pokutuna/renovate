{"version":3,"file":"regex.js","sourceRoot":"","sources":["../../lib/util/regex.ts"],"names":[],"mappings":";;;AAAA,gEAAgE;AAChE,sCAAmC;AAEnC,IAAI,KAAwB,CAAC;AAE7B,IAAI;IACF,2BAA2B;IAC3B,MAAM,GAAG,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAC3B,4BAA4B;IAC5B,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC3B,eAAM,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;IAC1C,KAAK,GAAG,GAAG,CAAC;CACb;AAAC,OAAO,GAAG,EAAE;IACZ,eAAM,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,EAAE,wCAAwC,CAAC,CAAC;IAC/D,KAAK,GAAG,MAAM,CAAC;CAChB;AAED,SAAgB,KAAK,CAAC,OAAe,EAAE,KAAc;IACnD,IAAI;QACF,OAAO,IAAI,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;KAClC;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,kCAAiB,CAAC,CAAC;QAC3C,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC;QAC3B,KAAK,CAAC,eAAe,GAAG,8BAA8B,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QACxE,MAAM,KAAK,CAAC;KACb;AACH,CAAC;AATD,sBASC;AAED,SAAgB,YAAY,CAAC,KAAa;IACxC,OAAO,KAAK,CAAC,OAAO,CAAC,uBAAuB,EAAE,MAAM,CAAC,CAAC,CAAC,oCAAoC;AAC7F,CAAC;AAFD,oCAEC","sourcesContent":["import { CONFIG_VALIDATION } from '../constants/error-messages';\nimport { logger } from '../logger';\n\nlet RegEx: RegExpConstructor;\n\ntry {\n  // eslint-disable-next-line\n  const RE2 = require('re2');\n  // Test if native is working\n  new RE2('.*').exec('test');\n  logger.debug('Using RE2 as regex engine');\n  RegEx = RE2;\n} catch (err) {\n  logger.warn({ err }, 'RE2 not usable, falling back to RegExp');\n  RegEx = RegExp;\n}\n\nexport function regEx(pattern: string, flags?: string): RegExp {\n  try {\n    return new RegEx(pattern, flags);\n  } catch (err) {\n    const error = new Error(CONFIG_VALIDATION);\n    error.configFile = pattern;\n    error.validationError = 'Invalid regular expression: ' + err.toString();\n    throw error;\n  }\n}\n\nexport function escapeRegExp(input: string): string {\n  return input.replace(/[.*+\\-?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\n"]}