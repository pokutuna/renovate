{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../lib/manager/gradle/utils.ts"],"names":[],"mappings":";;;;;;AACA,4CAAoB;AACpB,uCAAiC;AACjC,kDAA0B;AAC1B,mDAAsD;AAGzC,QAAA,QAAQ,GAAG;IACtB,WAAW,EACT,qHAAqH;CACxH,CAAC;AAEF,SAAgB,qBAAqB,CAAC,MAAqB;IACzD,IACE,YAAE,CAAC,QAAQ,EAAE,KAAK,OAAO;QACzB,CAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,YAAY,MAAK,qBAAY,CAAC,MAAM,EAC5C;QACA,OAAO,aAAa,CAAC;KACtB;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AARD,sDAQC;AAEM,KAAK,UAAU,oBAAoB,CACxC,WAAmB,EACnB,GAAW,EACX,OAAqB,EACrB,IAAmB;IAEnB,+BAA+B;IAC/B,qBAAqB;IACrB,IAAI,CAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,MAAM,QAAO,IAAI,EAAE;QAC9B,0CAA0C;QAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,EAAE;YAC9B,8DAA8D;YAC9D,MAAM,gBAAK,CAAC,eAAK,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,CAAC,EAAE,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;SACjE;QACD,IAAI,IAAI,KAAK,IAAI,EAAE;YACjB,OAAO,WAAW,CAAC;SACpB;QACD,OAAO,GAAG,WAAW,IAAI,IAAI,EAAE,CAAC;KACjC;IACD,8BAA8B;IAC9B,OAAO,IAAI,CAAC;AACd,CAAC;AArBD,oDAqBC","sourcesContent":["import { Stats } from 'fs';\nimport os from 'os';\nimport { chmod } from 'fs-extra';\nimport upath from 'upath';\nimport { BinarySource } from '../../util/exec/common';\nimport { ExtractConfig } from '../common';\n\nexport const extraEnv = {\n  GRADLE_OPTS:\n    '-Dorg.gradle.parallel=true -Dorg.gradle.configureondemand=true -Dorg.gradle.daemon=false -Dorg.gradle.caching=false',\n};\n\nexport function gradleWrapperFileName(config: ExtractConfig): string {\n  if (\n    os.platform() === 'win32' &&\n    config?.binarySource !== BinarySource.Docker\n  ) {\n    return 'gradlew.bat';\n  }\n  return './gradlew';\n}\n\nexport async function prepareGradleCommand(\n  gradlewName: string,\n  cwd: string,\n  gradlew: Stats | null,\n  args: string | null\n): Promise<string> {\n  /* eslint-disable no-bitwise */\n  // istanbul ignore if\n  if (gradlew?.isFile() === true) {\n    // if the file is not executable by others\n    if ((gradlew.mode & 0o1) === 0) {\n      // add the execution permission to the owner, group and others\n      await chmod(upath.join(cwd, gradlewName), gradlew.mode | 0o111);\n    }\n    if (args === null) {\n      return gradlewName;\n    }\n    return `${gradlewName} ${args}`;\n  }\n  /* eslint-enable no-bitwise */\n  return null;\n}\n"]}