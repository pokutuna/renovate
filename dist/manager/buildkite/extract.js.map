{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/buildkite/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import * as datasourceGithubTags from '../../datasource/github-tags';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { isVersion } from '../../versioning/semver';\nimport { PackageDependency, PackageFile } from '../common';\n\nexport function extractPackageFile(content: string): PackageFile | null {\n  const deps: PackageDependency[] = [];\n  try {\n    const lines = content.split('\\n');\n    let isPluginsSection = false;\n    let pluginsIndent = '';\n    for (let lineNumber = 1; lineNumber <= lines.length; lineNumber += 1) {\n      const lineIdx = lineNumber - 1;\n      const line = lines[lineIdx];\n      const pluginsSection = /^(?<pluginsIndent>\\s*)(-?\\s*)plugins:/.exec(line);\n      if (pluginsSection) {\n        logger.trace(`Matched plugins on line ${lineNumber}`);\n        isPluginsSection = true;\n        pluginsIndent = pluginsSection.groups.pluginsIndent;\n      } else if (isPluginsSection) {\n        logger.debug(`serviceImageLine: \"${line}\"`);\n        const { currentIndent } = /^(?<currentIndent>\\s*)/.exec(line).groups;\n        const depLineMatch = /^\\s+(?:-\\s+)?(?<depName>[^#]+)#(?<currentValue>[^:]+)/.exec(\n          line\n        );\n        if (currentIndent.length <= pluginsIndent.length) {\n          isPluginsSection = false;\n          pluginsIndent = '';\n        } else if (depLineMatch) {\n          const { depName, currentValue } = depLineMatch.groups;\n          logger.trace('depLineMatch');\n          let skipReason: SkipReason;\n          let repo: string;\n          if (depName.startsWith('https://') || depName.startsWith('git@')) {\n            logger.debug({ dependency: depName }, 'Skipping git plugin');\n            skipReason = SkipReason.GitPlugin;\n          } else if (!isVersion(currentValue)) {\n            logger.debug(\n              { currentValue },\n              'Skipping non-pinned current version'\n            );\n            skipReason = SkipReason.InvalidVersion;\n          } else {\n            const splitName = depName.split('/');\n            if (splitName.length === 1) {\n              repo = `buildkite-plugins/${depName}-buildkite-plugin`;\n            } else if (splitName.length === 2) {\n              repo = `${depName}-buildkite-plugin`;\n            } else {\n              logger.warn(\n                { dependency: depName },\n                'Something is wrong with buildkite plugin name'\n              );\n              skipReason = SkipReason.Unknown;\n            }\n          }\n          const dep: PackageDependency = {\n            depName,\n            currentValue,\n            skipReason,\n          };\n          if (repo) {\n            dep.datasource = datasourceGithubTags.id;\n            dep.lookupName = repo;\n          }\n          deps.push(dep);\n        }\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'Error extracting buildkite plugins');\n  }\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}