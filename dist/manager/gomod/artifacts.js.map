{"version":3,"file":"artifacts.js","sourceRoot":"","sources":["../../../lib/manager/gomod/artifacts.ts"],"names":[],"mappings":";;;AAAA,iCAA8B;AAC9B,iCAAsC;AACtC,yDAAiE;AACjE,yCAAsC;AACtC,0CAAoD;AACpD,mDAAsD;AACtD,sCAA8E;AAC9E,wCAA+C;AAC/C,sDAA6C;AAG7C,SAAS,cAAc;IACrB,MAAM,WAAW,GAAG,iBAAI,CAAC;QACvB,QAAQ,EAAE,gCAAoB;QAC9B,GAAG,EAAE,yBAAyB;KAC/B,CAAC,CAAC;IACH,IAAI,WAAW,GAAG,IAAI,CAAC;IACvB,IAAI,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,KAAK,EAAE;QACtB,MAAM,KAAK,GAAG,aAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACvC,WAAW,GAAG;YACZ,qCAAqC,KAAK,kDAAkD;SAC7F,CAAC;KACH;IACD,OAAO,WAAW,CAAC;AACrB,CAAC;AAEM,KAAK,UAAU,eAAe,CAAC,EACpC,eAAe,EAAE,aAAa,EAC9B,WAAW,EAAE,YAAY,EACzB,qBAAqB,EAAE,eAAe,EACtC,MAAM,GACS;;IACf,eAAM,CAAC,KAAK,CAAC,yBAAyB,aAAa,GAAG,CAAC,CAAC;IAExD,MAAM,MAAM,GAAG,MAAM,mBAAc,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC;IAC7D,eAAM,CAAC,KAAK,CAAC,iBAAiB,MAAM,EAAE,CAAC,CAAC;IAExC,MAAM,WAAW,GAAG,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC5D,MAAM,oBAAoB,GAAG,MAAM,kBAAa,CAAC,WAAW,CAAC,CAAC;IAC9D,IAAI,CAAC,oBAAoB,EAAE;QACzB,eAAM,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;QAChC,OAAO,IAAI,CAAC;KACb;IAED,MAAM,SAAS,GAAG,YAAI,CAAC,eAAO,CAAC,aAAa,CAAC,EAAE,SAAS,CAAC,CAAC;IAC1D,MAAM,qBAAqB,GAAG,YAAI,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;IAC7D,MAAM,SAAS,GAAG,CAAC,MAAM,kBAAa,CAAC,qBAAqB,CAAC,CAAC,KAAK,IAAI,CAAC;IAExE,IAAI;QACF,MAAM,aAAa,GAAG,eAAe,CAAC,OAAO,CAC3C,uCAAuC,EACvC,0BAA0B,CAC3B,CAAC;QACF,IAAI,aAAa,KAAK,eAAe,EAAE;YACrC,eAAM,CAAC,KAAK,CAAC,sDAAsD,CAAC,CAAC;SACtE;QACD,MAAM,mBAAc,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;QAEnD,MAAM,GAAG,GAAG,IAAI,CAAC;QACjB,MAAM,WAAW,GAAgB;YAC/B,OAAO,EAAE,aAAa;YACtB,QAAQ,EAAE;gBACR,MAAM,EAAE,MAAM;gBACd,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,OAAO;gBAC5B,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;gBAChC,SAAS,EAAE,OAAO,CAAC,GAAG,CAAC,SAAS;gBAChC,WAAW,EAAE,MAAM,CAAC,YAAY,KAAK,qBAAY,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI;aACtE;YACD,MAAM,EAAE;gBACN,KAAK,EAAE,aAAa;gBACpB,aAAa,QAAE,MAAM,CAAC,aAAa,0CAAE,EAAE;gBACvC,SAAS,EAAE,KAAK;gBAChB,OAAO,EAAE,CAAC,MAAM,CAAC;gBACjB,WAAW,EAAE,cAAc,EAAE;aAC9B;SACF,CAAC;QACF,IAAI,IAAI,GAAG,cAAc,CAAC;QAC1B,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,yBAAyB,CAAC,CAAC;QACvD,MAAM,YAAY,GAAG,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;QAExC,UAAI,MAAM,CAAC,iBAAiB,0CAAE,QAAQ,CAAC,WAAW,GAAG;YACnD,IAAI,GAAG,UAAU,CAAC;YAClB,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,8BAA8B,CAAC,CAAC;YAC5D,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;SACrC;QAED,IAAI,SAAS,EAAE;YACb,IAAI,GAAG,YAAY,CAAC;YACpB,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,gCAAgC,CAAC,CAAC;YAC9D,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;YACpC,UAAI,MAAM,CAAC,iBAAiB,0CAAE,QAAQ,CAAC,WAAW,GAAG;gBACnD,IAAI,GAAG,UAAU,CAAC;gBAClB,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE,EAAE,8BAA8B,CAAC,CAAC;gBAC5D,YAAY,CAAC,IAAI,CAAC,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;aACrC;SACF;QAED,MAAM,WAAI,CAAC,YAAY,EAAE,WAAW,CAAC,CAAC;QAEtC,MAAM,MAAM,GAAG,MAAM,mBAAa,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE;YAC1C,OAAO,IAAI,CAAC;SACb;QAED,eAAM,CAAC,KAAK,CAAC,0BAA0B,CAAC,CAAC;QACzC,MAAM,GAAG,GAA4B;YACnC;gBACE,IAAI,EAAE;oBACJ,IAAI,EAAE,WAAW;oBACjB,QAAQ,EAAE,MAAM,kBAAa,CAAC,WAAW,CAAC;iBAC3C;aACF;SACF,CAAC;QAEF,IAAI,SAAS,EAAE;YACb,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE;gBACxD,IAAI,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;oBAC3B,GAAG,CAAC,IAAI,CAAC;wBACP,IAAI,EAAE;4BACJ,IAAI,EAAE,CAAC;4BACP,QAAQ,EAAE,MAAM,kBAAa,CAAC,CAAC,CAAC;yBACjC;qBACF,CAAC,CAAC;iBACJ;aACF;YACD,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,OAAO,IAAI,EAAE,EAAE;gBACpC,GAAG,CAAC,IAAI,CAAC;oBACP,IAAI,EAAE;wBACJ,IAAI,EAAE,UAAU;wBAChB,QAAQ,EAAE,CAAC;qBACZ;iBACF,CAAC,CAAC;aACJ;SACF;QAED,MAAM,iBAAiB,GAAG,CACxB,MAAM,kBAAa,CAAC,aAAa,EAAE,MAAM,CAAC,CAC3C,CAAC,OAAO,CAAC,yBAAyB,EAAE,EAAE,CAAC,CAAC;QACzC,IAAI,iBAAiB,KAAK,eAAe,EAAE;YACzC,eAAM,CAAC,KAAK,CAAC,0CAA0C,CAAC,CAAC;YACzD,GAAG,CAAC,IAAI,CAAC;gBACP,IAAI,EAAE;oBACJ,IAAI,EAAE,aAAa;oBACnB,QAAQ,EAAE,iBAAiB;iBAC5B;aACF,CAAC,CAAC;SACJ;QACD,OAAO,GAAG,CAAC;KACZ;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,EAAE,yBAAyB,CAAC,CAAC;QACjD,OAAO;YACL;gBACE,aAAa,EAAE;oBACb,QAAQ,EAAE,WAAW;oBACrB,MAAM,EAAE,GAAG,CAAC,OAAO;iBACpB;aACF;SACF,CAAC;KACH;AACH,CAAC;AArID,0CAqIC","sourcesContent":["import { quote } from 'shlex';\nimport { dirname, join } from 'upath';\nimport { PLATFORM_TYPE_GITHUB } from '../../constants/platforms';\nimport { logger } from '../../logger';\nimport { ExecOptions, exec } from '../../util/exec';\nimport { BinarySource } from '../../util/exec/common';\nimport { ensureCacheDir, readLocalFile, writeLocalFile } from '../../util/fs';\nimport { getRepoStatus } from '../../util/git';\nimport { find } from '../../util/host-rules';\nimport { UpdateArtifact, UpdateArtifactsResult } from '../common';\n\nfunction getPreCommands(): string[] | null {\n  const credentials = find({\n    hostType: PLATFORM_TYPE_GITHUB,\n    url: 'https://api.github.com/',\n  });\n  let preCommands = null;\n  if (credentials?.token) {\n    const token = quote(credentials.token);\n    preCommands = [\n      `git config --global url.\\\"https://${token}@github.com/\\\".insteadOf \\\"https://github.com/\\\"`, // eslint-disable-line no-useless-escape\n    ];\n  }\n  return preCommands;\n}\n\nexport async function updateArtifacts({\n  packageFileName: goModFileName,\n  updatedDeps: _updatedDeps,\n  newPackageFileContent: newGoModContent,\n  config,\n}: UpdateArtifact): Promise<UpdateArtifactsResult[] | null> {\n  logger.debug(`gomod.updateArtifacts(${goModFileName})`);\n\n  const goPath = await ensureCacheDir('./others/go', 'GOPATH');\n  logger.debug(`Using GOPATH: ${goPath}`);\n\n  const sumFileName = goModFileName.replace(/\\.mod$/, '.sum');\n  const existingGoSumContent = await readLocalFile(sumFileName);\n  if (!existingGoSumContent) {\n    logger.debug('No go.sum found');\n    return null;\n  }\n\n  const vendorDir = join(dirname(goModFileName), 'vendor/');\n  const vendorModulesFileName = join(vendorDir, 'modules.txt');\n  const useVendor = (await readLocalFile(vendorModulesFileName)) !== null;\n\n  try {\n    const massagedGoMod = newGoModContent.replace(\n      /\\n(replace\\s+[^\\s]+\\s+=>\\s+\\.\\.\\/.*)/g,\n      '\\n// renovate-replace $1'\n    );\n    if (massagedGoMod !== newGoModContent) {\n      logger.debug('Removed some relative replace statements from go.mod');\n    }\n    await writeLocalFile(goModFileName, massagedGoMod);\n\n    const cmd = 'go';\n    const execOptions: ExecOptions = {\n      cwdFile: goModFileName,\n      extraEnv: {\n        GOPATH: goPath,\n        GOPROXY: process.env.GOPROXY,\n        GOPRIVATE: process.env.GOPRIVATE,\n        GONOSUMDB: process.env.GONOSUMDB,\n        CGO_ENABLED: config.binarySource === BinarySource.Docker ? '0' : null,\n      },\n      docker: {\n        image: 'renovate/go',\n        tagConstraint: config.compatibility?.go,\n        tagScheme: 'npm',\n        volumes: [goPath],\n        preCommands: getPreCommands(),\n      },\n    };\n    let args = 'get -d ./...';\n    logger.debug({ cmd, args }, 'go get command included');\n    const execCommands = [`${cmd} ${args}`];\n\n    if (config.postUpdateOptions?.includes('gomodTidy')) {\n      args = 'mod tidy';\n      logger.debug({ cmd, args }, 'go mod tidy command included');\n      execCommands.push(`${cmd} ${args}`);\n    }\n\n    if (useVendor) {\n      args = 'mod vendor';\n      logger.debug({ cmd, args }, 'go mod vendor command included');\n      execCommands.push(`${cmd} ${args}`);\n      if (config.postUpdateOptions?.includes('gomodTidy')) {\n        args = 'mod tidy';\n        logger.debug({ cmd, args }, 'go mod tidy command included');\n        execCommands.push(`${cmd} ${args}`);\n      }\n    }\n\n    await exec(execCommands, execOptions);\n\n    const status = await getRepoStatus();\n    if (!status.modified.includes(sumFileName)) {\n      return null;\n    }\n\n    logger.debug('Returning updated go.sum');\n    const res: UpdateArtifactsResult[] = [\n      {\n        file: {\n          name: sumFileName,\n          contents: await readLocalFile(sumFileName),\n        },\n      },\n    ];\n\n    if (useVendor) {\n      for (const f of status.modified.concat(status.not_added)) {\n        if (f.startsWith(vendorDir)) {\n          res.push({\n            file: {\n              name: f,\n              contents: await readLocalFile(f),\n            },\n          });\n        }\n      }\n      for (const f of status.deleted || []) {\n        res.push({\n          file: {\n            name: '|delete|',\n            contents: f,\n          },\n        });\n      }\n    }\n\n    const finalGoModContent = (\n      await readLocalFile(goModFileName, 'utf8')\n    ).replace(/\\/\\/ renovate-replace /g, '');\n    if (finalGoModContent !== newGoModContent) {\n      logger.debug('Found updated go.mod after go.sum update');\n      res.push({\n        file: {\n          name: goModFileName,\n          contents: finalGoModContent,\n        },\n      });\n    }\n    return res;\n  } catch (err) {\n    logger.debug({ err }, 'Failed to update go.sum');\n    return [\n      {\n        artifactError: {\n          lockFile: sumFileName,\n          stderr: err.message,\n        },\n      },\n    ];\n  }\n}\n"]}