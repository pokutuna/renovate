{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/gomod/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import { validRange } from 'semver';\nimport * as datasourceGo from '../../datasource/go';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { isVersion } from '../../versioning/semver';\nimport { PackageDependency, PackageFile } from '../common';\n\nfunction getDep(\n  lineNumber: number,\n  match: RegExpMatchArray,\n  type: string\n): PackageDependency {\n  const [, , currentValue] = match;\n  let [, depName] = match;\n  depName = depName.replace(/\"/g, '');\n  const dep: PackageDependency = {\n    managerData: {\n      lineNumber,\n    },\n    depName,\n    depType: type,\n    currentValue,\n  };\n  if (!isVersion(currentValue)) {\n    dep.skipReason = SkipReason.UnsupportedVersion;\n  } else {\n    if (depName.startsWith('gopkg.in/')) {\n      const [pkg] = depName.replace('gopkg.in/', '').split('.');\n      dep.depNameShort = pkg;\n    } else if (depName.startsWith('github.com/')) {\n      dep.depNameShort = depName.replace('github.com/', '');\n    } else {\n      dep.depNameShort = depName;\n    }\n    dep.datasource = datasourceGo.id;\n  }\n  const digestMatch = /v0\\.0.0-\\d{14}-([a-f0-9]{12})/.exec(currentValue);\n  if (digestMatch) {\n    [, dep.currentDigest] = digestMatch;\n    dep.digestOneAndOnly = true;\n  }\n  return dep;\n}\n\nexport function extractPackageFile(content: string): PackageFile | null {\n  logger.trace({ content }, 'gomod.extractPackageFile()');\n  const compatibility: Record<string, any> = {};\n  const deps: PackageDependency[] = [];\n  try {\n    const lines = content.split('\\n');\n    for (let lineNumber = 0; lineNumber < lines.length; lineNumber += 1) {\n      let line = lines[lineNumber];\n      if (line.startsWith('go ') && validRange(line.replace('go ', ''))) {\n        compatibility.go = line.replace('go ', '');\n      }\n      const replaceMatch = /^replace\\s+[^\\s]+[\\s]+[=][>]\\s+([^\\s]+)\\s+([^\\s]+)/.exec(\n        line\n      );\n      if (replaceMatch) {\n        const dep = getDep(lineNumber, replaceMatch, 'replace');\n        deps.push(dep);\n      }\n      const requireMatch = /^require\\s+([^\\s]+)\\s+([^\\s]+)/.exec(line);\n      if (requireMatch && !line.endsWith('// indirect')) {\n        logger.trace({ lineNumber }, `require line: \"${line}\"`);\n        const dep = getDep(lineNumber, requireMatch, 'require');\n        deps.push(dep);\n      }\n      if (line.trim() === 'require (') {\n        logger.trace(`Matched multi-line require on line ${lineNumber}`);\n        do {\n          lineNumber += 1;\n          line = lines[lineNumber];\n          const multiMatch = /^\\s+([^\\s]+)\\s+([^\\s]+)/.exec(line);\n          logger.trace(`reqLine: \"${line}\"`);\n          if (multiMatch && !line.endsWith('// indirect')) {\n            logger.trace({ lineNumber }, `require line: \"${line}\"`);\n            const dep = getDep(lineNumber, multiMatch, 'require');\n            dep.managerData.multiLine = true;\n            deps.push(dep);\n          } else if (line.trim() !== ')') {\n            logger.debug(`No multi-line match: ${line}`);\n          }\n        } while (line.trim() !== ')');\n      }\n    }\n  } catch (err) /* istanbul ignore next */ {\n    logger.warn({ err }, 'Error extracting go modules');\n  }\n  if (!deps.length) {\n    return null;\n  }\n  return { compatibility, deps };\n}\n"]}