{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/helmfile/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport yaml from 'js-yaml';\nimport * as datasourceHelm from '../../datasource/helm';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { ExtractConfig, PackageDependency, PackageFile } from '../common';\n\nconst isValidChartName = (name: string): boolean => {\n  return !/[!@#$%^&*(),.?\":{}/|<>A-Z]/.test(name);\n};\n\nexport function extractPackageFile(\n  content: string,\n  fileName: string,\n  config: ExtractConfig\n): PackageFile {\n  let deps = [];\n  let doc;\n  const aliases: Record<string, string> = {};\n  try {\n    doc = yaml.safeLoad(content, { json: true });\n  } catch (err) {\n    logger.debug({ err, fileName }, 'Failed to parse helmfile helmfile.yaml');\n    return null;\n  }\n  if (!(doc && is.array(doc.releases))) {\n    logger.debug({ fileName }, 'helmfile.yaml has no releases');\n    return null;\n  }\n\n  if (doc.repositories) {\n    for (let i = 0; i < doc.repositories.length; i += 1) {\n      aliases[doc.repositories[i].name] = doc.repositories[i].url;\n    }\n  }\n  logger.debug({ aliases }, 'repositories discovered.');\n\n  deps = doc.releases.map((dep) => {\n    let depName = dep.chart;\n    let repoName = null;\n\n    // If starts with ./ is for sure a local path\n    if (dep.chart.startsWith('./')) {\n      return {\n        depName,\n        skipReason: 'local-chart',\n      } as PackageDependency;\n    }\n\n    if (dep.chart.includes('/')) {\n      const v = dep.chart.split('/');\n      repoName = v.shift();\n      depName = v.join('/');\n    } else {\n      repoName = dep.chart;\n    }\n\n    const res: PackageDependency = {\n      depName,\n      currentValue: dep.version,\n      registryUrls: [aliases[repoName]]\n        .concat([config.aliases[repoName]])\n        .filter(Boolean),\n    };\n\n    // If version is null is probably a local chart\n    if (!res.currentValue) {\n      res.skipReason = SkipReason.LocalChart;\n    }\n\n    // By definition on helm the chart name should be lowecase letter + number + -\n    // However helmfile support templating of that field\n    if (!isValidChartName(res.depName)) {\n      res.skipReason = SkipReason.UnsupportedChartType;\n    }\n\n    // Skip in case we cannot locate the registry\n    if (is.emptyArray(res.registryUrls)) {\n      res.skipReason = SkipReason.UnknownRegistry;\n    }\n\n    return res;\n  });\n\n  return { deps, datasource: datasourceHelm.id } as PackageFile;\n}\n"]}