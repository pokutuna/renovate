{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/pip_requirements/extract.ts"],"names":[],"mappings":"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","sourcesContent":["// based on https://www.python.org/dev/peps/pep-0508/#names\nimport { RANGE_PATTERN as rangePattern } from '@renovate/pep440/lib/specifier';\nimport * as datasourcePypi from '../../datasource/pypi';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { isSkipComment } from '../../util/ignore';\nimport { ExtractConfig, PackageDependency, PackageFile } from '../common';\n\nexport const packagePattern =\n  '[a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9._-]*[a-zA-Z0-9]';\nconst extrasPattern = '(?:\\\\s*\\\\[[^\\\\]]+\\\\])?';\n\nconst specifierPartPattern = `\\\\s*${rangePattern.replace(/\\?<\\w+>/g, '?:')}`;\nconst specifierPattern = `${specifierPartPattern}(?:\\\\s*,${specifierPartPattern})*`;\nexport const dependencyPattern = `(${packagePattern})(${extrasPattern})(${specifierPattern})`;\n\nexport function extractPackageFile(\n  content: string,\n  _: string,\n  config: ExtractConfig\n): PackageFile | null {\n  logger.trace('pip_requirements.extractPackageFile()');\n\n  let indexUrl: string;\n  const extraUrls = [];\n  content.split('\\n').forEach((line) => {\n    if (line.startsWith('--index-url ')) {\n      indexUrl = line.substring('--index-url '.length).split(' ')[0];\n    }\n    if (line.startsWith('--extra-index-url ')) {\n      const extraUrl = line\n        .substring('--extra-index-url '.length)\n        .split(' ')[0];\n      extraUrls.push(extraUrl);\n    }\n  });\n  let registryUrls: string[] = [];\n  if (indexUrl) {\n    // index url in file takes precedence\n    registryUrls.push(indexUrl);\n  } else if (config.registryUrls?.length) {\n    // configured registryURls takes next precedence\n    registryUrls = registryUrls.concat(config.registryUrls);\n  } else if (extraUrls.length) {\n    // Use default registry first if extra URLs are present and index URL is not\n    registryUrls.push('https://pypi.org/pypi/');\n  }\n  registryUrls = registryUrls.concat(extraUrls);\n\n  const regex = new RegExp(`^${dependencyPattern}$`, 'g');\n  const deps = content\n    .split('\\n')\n    .map((rawline) => {\n      let dep: PackageDependency = {};\n      const [line, comment] = rawline.split('#').map((part) => part.trim());\n      if (isSkipComment(comment)) {\n        dep.skipReason = SkipReason.Ignored;\n      }\n      regex.lastIndex = 0;\n      const matches = regex.exec(line.split(' \\\\')[0]);\n      if (!matches) {\n        return null;\n      }\n      const [, depName, , currentValue] = matches;\n      dep = {\n        ...dep,\n        depName,\n        currentValue,\n        datasource: datasourcePypi.id,\n      };\n      if (currentValue?.startsWith('==')) {\n        dep.fromVersion = currentValue.replace(/^==/, '');\n      }\n      return dep;\n    })\n    .filter(Boolean);\n  if (!deps.length) {\n    return null;\n  }\n  const res: PackageFile = { deps };\n  if (registryUrls.length > 0) {\n    res.registryUrls = registryUrls.map((url) => {\n      // handle the optional quotes in eg. `--extra-index-url \"https://foo.bar\"`\n      const cleaned = url.replace(/^\"/, '').replace(/\"$/, '');\n      if (global.trustLevel !== 'high') {\n        return cleaned;\n      }\n      // interpolate any environment variables\n      return cleaned.replace(\n        /(\\$[A-Za-z\\d_]+)|(\\${[A-Za-z\\d_]+})/g,\n        (match) => {\n          const envvar = match.substring(1).replace(/^{/, '').replace(/}$/, '');\n          const sub = process.env[envvar];\n          return sub || match;\n        }\n      );\n    });\n  }\n  return res;\n}\n"]}