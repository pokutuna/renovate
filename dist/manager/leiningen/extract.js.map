{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/leiningen/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import * as datasourceClojure from '../../datasource/clojure';\nimport { PackageDependency, PackageFile } from '../common';\n\nexport function trimAtKey(str: string, kwName: string): string | null {\n  const regex = new RegExp(`:${kwName}(?=\\\\s)`);\n  const keyOffset = str.search(regex);\n  if (keyOffset < 0) {\n    return null;\n  }\n  const withSpaces = str.slice(keyOffset + kwName.length + 1);\n  const valueOffset = withSpaces.search(/[^\\s]/);\n  if (valueOffset < 0) {\n    return null;\n  }\n  return withSpaces.slice(valueOffset);\n}\n\nexport function expandDepName(name: string): string {\n  return !name.includes('/') ? `${name}:${name}` : name.replace('/', ':');\n}\n\nexport interface ExtractContext {\n  depType?: string;\n  registryUrls?: string[];\n}\n\nexport function extractFromVectors(\n  str: string,\n  offset = 0,\n  ctx: ExtractContext = {}\n): PackageDependency[] {\n  if (!str.startsWith('[')) {\n    return [];\n  }\n  let balance = 0;\n  const result: PackageDependency[] = [];\n  let idx = 0;\n  let vecPos = 0;\n  let artifactId = '';\n  let version = '';\n  let fileReplacePosition: number = null;\n\n  const isSpace = (ch: string): boolean => ch && /[\\s,]/.test(ch);\n\n  const cleanStrLiteral = (s: string): string =>\n    s.replace(/^\"/, '').replace(/\"$/, '');\n\n  const yieldDep = (): void => {\n    if (artifactId && version && fileReplacePosition) {\n      result.push({\n        ...ctx,\n        datasource: datasourceClojure.id,\n        depName: expandDepName(cleanStrLiteral(artifactId)),\n        currentValue: cleanStrLiteral(version),\n      });\n    }\n    artifactId = '';\n    version = '';\n  };\n\n  let prevChar = null;\n  while (idx < str.length) {\n    const char = str.charAt(idx);\n    if (char === '[') {\n      balance += 1;\n      if (balance === 2) {\n        vecPos = 0;\n      }\n    } else if (char === ']') {\n      balance -= 1;\n      if (balance === 1) {\n        yieldDep();\n      } else if (balance === 0) {\n        break;\n      }\n    } else if (balance === 2) {\n      if (isSpace(char)) {\n        if (!isSpace(prevChar)) {\n          vecPos += 1;\n        }\n      } else if (vecPos === 0) {\n        artifactId += char;\n      } else if (vecPos === 1) {\n        if (isSpace(prevChar)) {\n          fileReplacePosition = offset + idx + 1;\n        }\n        version += char;\n      }\n    }\n    prevChar = char;\n    idx += 1;\n  }\n  return result;\n}\n\nfunction extractLeinRepos(content: string): string[] {\n  const result = [];\n\n  const repoContent = trimAtKey(\n    content.replace(/;;.*(?=[\\r\\n])/g, ''), // get rid of comments\n    'repositories'\n  );\n\n  if (repoContent) {\n    let balance = 0;\n    let endIdx = 0;\n    for (let idx = 0; idx < repoContent.length; idx += 1) {\n      const char = repoContent.charAt(idx);\n      if (char === '[') {\n        balance += 1;\n      } else if (char === ']') {\n        balance -= 1;\n        if (balance <= 0) {\n          endIdx = idx;\n          break;\n        }\n      }\n    }\n    const repoSectionContent = repoContent.slice(0, endIdx);\n    const matches = repoSectionContent.match(/\"https?:\\/\\/[^\"]*\"/g) || [];\n    const urls = matches.map((x) => x.replace(/^\"/, '').replace(/\"$/, ''));\n    urls.forEach((url) => result.push(url));\n  }\n\n  return result;\n}\n\nexport function extractPackageFile(content: string): PackageFile {\n  const collect = (key: string, ctx: ExtractContext): PackageDependency[] => {\n    let result: PackageDependency[] = [];\n    let restContent = trimAtKey(content, key);\n    while (restContent) {\n      const offset = content.length - restContent.length;\n      result = [...result, ...extractFromVectors(restContent, offset, ctx)];\n      restContent = trimAtKey(restContent, key);\n    }\n    return result;\n  };\n\n  const registryUrls = extractLeinRepos(content);\n\n  const deps: PackageDependency[] = [\n    ...collect('dependencies', {\n      depType: 'dependencies',\n      registryUrls,\n    }),\n    ...collect('managed-dependencies', {\n      depType: 'managed-dependencies',\n      registryUrls,\n    }),\n    ...collect('dev-dependencies', {\n      depType: 'managed-dependencies',\n      registryUrls,\n    }),\n    ...collect('plugins', {\n      depType: 'plugins',\n      registryUrls,\n    }),\n    ...collect('pom-plugins', {\n      depType: 'pom-plugins',\n      registryUrls,\n    }),\n  ];\n\n  return { deps };\n}\n"]}