{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/pip_setup/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import * as datasourcePypi from '../../datasource/pypi';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { exec } from '../../util/exec';\nimport { BinarySource } from '../../util/exec/common';\nimport { isSkipComment } from '../../util/ignore';\nimport { ExtractConfig, PackageDependency, PackageFile } from '../common';\nimport { dependencyPattern } from '../pip_requirements/extract';\nimport { PythonSetup, copyExtractFile, parseReport } from './util';\n\nexport const pythonVersions = ['python', 'python3', 'python3.8'];\nlet pythonAlias: string | null = null;\n\nexport function resetModule(): void {\n  pythonAlias = null;\n}\n\nexport function parsePythonVersion(str: string): number[] {\n  const arr = str.split(' ')[1].split('.');\n  return [parseInt(arr[0], 10), parseInt(arr[1], 10)];\n}\n\nexport async function getPythonAlias(): Promise<string> {\n  if (pythonAlias) {\n    return pythonAlias;\n  }\n  pythonAlias = pythonVersions[0]; // fallback to 'python'\n  for (const pythonVersion of pythonVersions) {\n    try {\n      const { stdout, stderr } = await exec(`${pythonVersion} --version`);\n      const version = parsePythonVersion(stdout || stderr);\n      if (version[0] >= 3 && version[1] >= 7) {\n        pythonAlias = pythonVersion;\n      }\n    } catch (err) {\n      logger.debug(`${pythonVersion} alias not found`);\n    }\n  }\n  return pythonAlias;\n}\n\nexport async function extractSetupFile(\n  _content: string,\n  packageFile: string,\n  config: ExtractConfig\n): Promise<PythonSetup> {\n  const cwd = config.localDir;\n  let cmd = 'python';\n  const extractPy = await copyExtractFile();\n  const args = [`\"${extractPy}\"`, `\"${packageFile}\"`];\n  if (config.binarySource !== BinarySource.Docker) {\n    logger.debug('Running python via global command');\n    cmd = await getPythonAlias();\n  }\n  logger.debug({ cmd, args }, 'python command');\n  const res = await exec(`${cmd} ${args.join(' ')}`, {\n    cwd,\n    timeout: 30000,\n    docker: {\n      image: 'renovate/pip',\n    },\n  });\n  if (res.stderr) {\n    const stderr = res.stderr\n      .replace(/.*\\n\\s*import imp/, '')\n      .trim()\n      .replace('fatal: No names found, cannot describe anything.', '');\n    if (stderr.length) {\n      logger.warn({ stdout: res.stdout, stderr }, 'Error in read setup file');\n    }\n  }\n  return parseReport();\n}\n\nexport async function extractPackageFile(\n  content: string,\n  packageFile: string,\n  config: ExtractConfig\n): Promise<PackageFile | null> {\n  logger.debug('pip_setup.extractPackageFile()');\n  let setup: PythonSetup;\n  try {\n    setup = await extractSetupFile(content, packageFile, config);\n  } catch (err) {\n    logger.warn({ err, content, packageFile }, 'Failed to read setup.py file');\n    return null;\n  }\n  const requires: string[] = [];\n  if (setup.install_requires) {\n    requires.push(...setup.install_requires);\n  }\n  if (setup.extras_require) {\n    for (const req of Object.values(setup.extras_require)) {\n      requires.push(...req);\n    }\n  }\n  const regex = new RegExp(`^${dependencyPattern}`);\n  const lines = content.split('\\n');\n  const deps = requires\n    .map((req) => {\n      const lineNumber = lines.findIndex((l) => l.includes(req));\n      if (lineNumber === -1) {\n        return null;\n      }\n      const rawline = lines[lineNumber];\n      let dep: PackageDependency = {};\n      const [, comment] = rawline.split('#').map((part) => part.trim());\n      if (isSkipComment(comment)) {\n        dep.skipReason = SkipReason.Ignored;\n      }\n      regex.lastIndex = 0;\n      const matches = regex.exec(req);\n      if (!matches) {\n        return null;\n      }\n      const [, depName, , currentValue] = matches;\n      dep = {\n        ...dep,\n        depName,\n        currentValue,\n        managerData: { lineNumber },\n        datasource: datasourcePypi.id,\n      };\n      return dep;\n    })\n    .filter(Boolean)\n    .sort((a, b) =>\n      a.managerData.lineNumber === b.managerData.lineNumber\n        ? a.depName.localeCompare(b.depName)\n        : a.managerData.lineNumber - b.managerData.lineNumber\n    );\n  if (!deps.length) {\n    return null;\n  }\n  return { deps };\n}\n"]}