"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const ansible = __importStar(require("./ansible"));
const ansibleGalaxy = __importStar(require("./ansible-galaxy"));
const bazel = __importStar(require("./bazel"));
const buildkite = __importStar(require("./buildkite"));
const bundler = __importStar(require("./bundler"));
const cargo = __importStar(require("./cargo"));
const cdnurl = __importStar(require("./cdnurl"));
const circleci = __importStar(require("./circleci"));
const cocoapods = __importStar(require("./cocoapods"));
const composer = __importStar(require("./composer"));
const depsEdn = __importStar(require("./deps-edn"));
const dockerCompose = __importStar(require("./docker-compose"));
const dockerfile = __importStar(require("./dockerfile"));
const droneci = __importStar(require("./droneci"));
const gitSubmodules = __importStar(require("./git-submodules"));
const githubActions = __importStar(require("./github-actions"));
const gitlabci = __importStar(require("./gitlabci"));
const gitlabciInclude = __importStar(require("./gitlabci-include"));
const gomod = __importStar(require("./gomod"));
const gradle = __importStar(require("./gradle"));
const gradleWrapper = __importStar(require("./gradle-wrapper"));
const helmRequirements = __importStar(require("./helm-requirements"));
const helmValues = __importStar(require("./helm-values"));
const helmfile = __importStar(require("./helmfile"));
const helmv3 = __importStar(require("./helmv3"));
const homebrew = __importStar(require("./homebrew"));
const html = __importStar(require("./html"));
const jenkins = __importStar(require("./jenkins"));
const kubernetes = __importStar(require("./kubernetes"));
const kustomize = __importStar(require("./kustomize"));
const leiningen = __importStar(require("./leiningen"));
const maven = __importStar(require("./maven"));
const meteor = __importStar(require("./meteor"));
const mix = __importStar(require("./mix"));
const nodenv = __importStar(require("./nodenv"));
const npm = __importStar(require("./npm"));
const nuget = __importStar(require("./nuget"));
const nvm = __importStar(require("./nvm"));
const pip_requirements = __importStar(require("./pip_requirements"));
const pip_setup = __importStar(require("./pip_setup"));
const pipenv = __importStar(require("./pipenv"));
const poetry = __importStar(require("./poetry"));
const pub = __importStar(require("./pub"));
const regex = __importStar(require("./regex"));
const rubyVersion = __importStar(require("./ruby-version"));
const sbt = __importStar(require("./sbt"));
const swift = __importStar(require("./swift"));
const terraform = __importStar(require("./terraform"));
const travis = __importStar(require("./travis"));
const api = new Map();
exports.default = api;
api.set('ansible', ansible);
api.set('ansible-galaxy', ansibleGalaxy);
api.set('bazel', bazel);
api.set('buildkite', buildkite);
api.set('bundler', bundler);
api.set('cargo', cargo);
api.set('cdnurl', cdnurl);
api.set('circleci', circleci);
api.set('cocoapods', cocoapods);
api.set('composer', composer);
api.set('deps-edn', depsEdn);
api.set('docker-compose', dockerCompose);
api.set('dockerfile', dockerfile);
api.set('droneci', droneci);
api.set('git-submodules', gitSubmodules);
api.set('github-actions', githubActions);
api.set('gitlabci', gitlabci);
api.set('gitlabci-include', gitlabciInclude);
api.set('gomod', gomod);
api.set('gradle', gradle);
api.set('gradle-wrapper', gradleWrapper);
api.set('helm-requirements', helmRequirements);
api.set('helm-values', helmValues);
api.set('helmfile', helmfile);
api.set('helmv3', helmv3);
api.set('homebrew', homebrew);
api.set('html', html);
api.set('jenkins', jenkins);
api.set('kubernetes', kubernetes);
api.set('kustomize', kustomize);
api.set('leiningen', leiningen);
api.set('maven', maven);
api.set('meteor', meteor);
api.set('mix', mix);
api.set('nodenv', nodenv);
api.set('npm', npm);
api.set('nuget', nuget);
api.set('nvm', nvm);
api.set('pip_requirements', pip_requirements);
api.set('pip_setup', pip_setup);
api.set('pipenv', pipenv);
api.set('poetry', poetry);
api.set('pub', pub);
api.set('regex', regex);
api.set('ruby-version', rubyVersion);
api.set('sbt', sbt);
api.set('swift', swift);
api.set('terraform', terraform);
api.set('travis', travis);
//# sourceMappingURL=api.generated.js.map