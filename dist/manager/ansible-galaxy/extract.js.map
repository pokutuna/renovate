{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/ansible-galaxy/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import * as datasourceGalaxy from '../../datasource/galaxy';\nimport * as datasourceGitTags from '../../datasource/git-tags';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { PackageDependency, PackageFile } from '../common';\n\nconst galaxyRoleRegex = /.+\\..+/;\n\nfunction interpretLine(\n  lineMatch: RegExpMatchArray,\n  lineNumber: number,\n  dependency: PackageDependency\n): PackageDependency {\n  const localDependency: PackageDependency = dependency;\n  const key = lineMatch[2];\n  const value = lineMatch[3].replace(/[\"']/g, '');\n  switch (key) {\n    case 'name': {\n      localDependency.managerData.name = value;\n      break;\n    }\n    case 'version': {\n      localDependency.managerData.version = value;\n      localDependency.currentValue = value;\n      localDependency.managerData.lineNumber = lineNumber;\n      break;\n    }\n    case 'scm': {\n      localDependency.managerData.scm = value;\n      break;\n    }\n    case 'src': {\n      localDependency.managerData.src = value;\n      break;\n    }\n    default: {\n      return null;\n    }\n  }\n  return localDependency;\n}\n\nfunction finalize(dependency: PackageDependency): boolean {\n  const dep = dependency;\n  if (dependency.managerData.version === null) {\n    dep.skipReason = SkipReason.NoVersion;\n    return false;\n  }\n\n  const source: string = dep.managerData.src;\n  const sourceMatch: RegExpMatchArray = new RegExp(\n    /^(git|http|git\\+http|ssh)s?(:\\/\\/|@).*(\\/|:)(.+\\/[^.]+)\\/?(\\.git)?$/\n  ).exec(source);\n  if (sourceMatch) {\n    dep.datasource = datasourceGitTags.id;\n    dep.depName = sourceMatch[4];\n    // remove leading `git+` from URLs like `git+https://...`\n    dep.lookupName = source.replace(/git\\+/, '');\n  } else if (galaxyRoleRegex.exec(source)) {\n    dep.datasource = datasourceGalaxy.id;\n    dep.depName = dep.managerData.src;\n    dep.lookupName = dep.managerData.src;\n  } else if (galaxyRoleRegex.exec(dep.managerData.name)) {\n    dep.datasource = datasourceGalaxy.id;\n    dep.depName = dep.managerData.name;\n    dep.lookupName = dep.managerData.name;\n  } else {\n    dep.skipReason = SkipReason.NoSourceMatch;\n    return false;\n  }\n  if (dep.managerData.name !== null) {\n    dep.depName = dep.managerData.name;\n  }\n\n  return true;\n}\n\nexport default function extractPackageFile(\n  content: string\n): PackageFile | null {\n  logger.trace('ansible-galaxy.extractPackageFile()');\n  const newBlockRegEx = new RegExp(/^\\s*-\\s*((\\w+):\\s*(.*))$/);\n  const blockLineRegEx = new RegExp(/^\\s*((\\w+):\\s*(.*))$/);\n  const deps: PackageDependency[] = [];\n  const lines = content.split('\\n');\n  try {\n    for (let lineNumber = 0; lineNumber < lines.length; lineNumber += 1) {\n      let lineMatch = newBlockRegEx.exec(lines[lineNumber]);\n      if (lineMatch) {\n        const dep: PackageDependency = {\n          managerData: {\n            name: null,\n            version: null,\n            scm: null,\n            src: null,\n          },\n        };\n        do {\n          const localdep = interpretLine(lineMatch, lineNumber, dep);\n          if (localdep == null) {\n            break;\n          }\n          const line = lines[lineNumber + 1];\n\n          if (!line) {\n            break;\n          }\n          lineMatch = blockLineRegEx.exec(line);\n          if (lineMatch) {\n            lineNumber += 1;\n          }\n        } while (lineMatch);\n        if (finalize(dep)) {\n          delete dep.managerData;\n          deps.push(dep);\n        }\n      }\n    }\n\n    if (!deps.length) {\n      return null;\n    }\n    return { deps };\n  } catch (err) /* istanbul ignore next */ {\n    logger.debug({ err }, 'Error extracting ansible-galaxy deps');\n    return null;\n  }\n}\n"]}