{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/helm-requirements/extract.ts"],"names":[],"mappings":"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","sourcesContent":["import is from '@sindresorhus/is';\nimport yaml from 'js-yaml';\nimport * as datasourceHelm from '../../datasource/helm';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { getSiblingFileName, readLocalFile } from '../../util/fs';\nimport { ExtractConfig, PackageDependency, PackageFile } from '../common';\n\nexport async function extractPackageFile(\n  content: string,\n  fileName: string,\n  config: ExtractConfig\n): Promise<PackageFile> {\n  try {\n    const chartFileName = getSiblingFileName(fileName, 'Chart.yaml');\n    const chartContents = await readLocalFile(chartFileName, 'utf8');\n    if (!chartContents) {\n      logger.debug({ fileName }, 'Failed to find helm Chart.yaml');\n      return null;\n    }\n    const chart = yaml.safeLoad(chartContents, { json: true });\n    if (!(chart?.apiVersion && chart.name && chart.version)) {\n      logger.debug(\n        { fileName },\n        'Failed to find required fields in Chart.yaml'\n      );\n      return null;\n    }\n  } catch (err) {\n    logger.debug({ fileName }, 'Failed to parse helm Chart.yaml');\n    return null;\n  }\n  let deps = [];\n  let doc;\n  try {\n    doc = yaml.safeLoad(content, { json: true });\n  } catch (err) {\n    logger.debug({ fileName }, 'Failed to parse helm requirements.yaml');\n    return null;\n  }\n  if (!(doc && is.array(doc.dependencies))) {\n    logger.debug({ fileName }, 'requirements.yaml has no dependencies');\n    return null;\n  }\n  deps = doc.dependencies.map((dep) => {\n    const res: PackageDependency = {\n      depName: dep.name,\n      currentValue: dep.version,\n    };\n    if (dep.repository) {\n      res.registryUrls = [dep.repository];\n      if (dep.repository.startsWith('@')) {\n        const repoWithAtRemoved = dep.repository.slice(1);\n        const alias = config.aliases[repoWithAtRemoved];\n        if (alias) {\n          res.registryUrls = [alias];\n          return res;\n        }\n\n        res.skipReason = SkipReason.PlaceholderUrl;\n      } else {\n        try {\n          const url = new URL(dep.repository);\n          if (url.protocol === 'file:') {\n            res.skipReason = SkipReason.LocalDependency;\n          }\n        } catch (err) {\n          logger.debug({ err }, 'Error parsing url');\n          res.skipReason = SkipReason.InvalidUrl;\n        }\n      }\n    } else {\n      res.skipReason = SkipReason.NoRepository;\n    }\n    return res;\n  });\n  const res = {\n    deps,\n    datasource: datasourceHelm.id,\n  };\n  return res;\n}\n"]}