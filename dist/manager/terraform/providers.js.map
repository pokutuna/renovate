{"version":3,"file":"providers.js","sourceRoot":"","sources":["../../../lib/manager/terraform/providers.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,0DAAkC;AAClC,iGAAmF;AACnF,uCAAyC;AACzC,0DAAqD;AAErD,iCAIgB;AAEH,QAAA,qBAAqB,GAAG,+DAA+D,CAAC;AAErG,SAAgB,wBAAwB,CACtC,YAAoB,EACpB,KAAe,EACf,UAAkB;IAElB,IAAI,UAAU,GAAG,YAAY,CAAC;IAC9B,IAAI,IAAY,CAAC;IACjB,MAAM,IAAI,GAAwB,EAAE,CAAC;IACrC,MAAM,GAAG,GAAsB;QAC7B,WAAW,EAAE;YACX,UAAU;YACV,uBAAuB,EAAE,+BAAwB,CAAC,QAAQ;SAC3D;KACF,CAAC;IACF,GAAG;QACD,UAAU,IAAI,CAAC,CAAC;QAChB,IAAI,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;QACzB,MAAM,OAAO,GAAG,8BAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnD,IAAI,OAAO,EAAE;YACX,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,SAAS,EAAE;gBACpC,GAAG,CAAC,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;aACzC;iBAAM,IAAI,OAAO,CAAC,MAAM,CAAC,GAAG,KAAK,QAAQ,EAAE;gBAC1C,GAAG,CAAC,WAAW,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC;gBAC9C,GAAG,CAAC,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;aACzC;SACF;KACF,QAAQ,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,EAAE;IAC9B,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACf,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,IAAI,EAAE,CAAC;AAC5C,CAAC;AA7BD,4DA6BC;AAED,SAAgB,wBAAwB,CAAC,GAAsB;IAC7D,sCAAsC;IACtC,GAAG,CAAC,OAAO,GAAG,WAAW,CAAC;IAC1B,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC;IACzC,GAAG,CAAC,YAAY,GAAG,GAAG,CAAC,WAAW,CAAC,UAAU,CAAC;IAC9C,GAAG,CAAC,UAAU,GAAG,2BAA2B,CAAC,EAAE,CAAC;IAChD,IAAI,CAAC,mBAAO,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;QAC9B,GAAG,CAAC,UAAU,GAAG,kBAAU,CAAC,kBAAkB,CAAC;KAChD;IAED,IAAI,YAAE,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE;QAC7C,MAAM,MAAM,GAAG,6BAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClE,IAAI,MAAM,EAAE;YACV,2DAA2D;YAC3D,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,qBAAqB,EAAE;gBACrD,GAAG,CAAC,YAAY,GAAG,CAAC,gCAAgC,CAAC,CAAC;aACvD;iBAAM;gBACL,GAAG,CAAC,UAAU,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBACpE,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE;oBAC1B,GAAG,CAAC,YAAY,GAAG,CAAC,WAAW,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;iBAC1D;qBAAM;oBACL,GAAG,CAAC,YAAY,GAAG,CAAC,+BAA+B,CAAC,CAAC;iBACtD;aACF;SACF;aAAM;YACL,GAAG,CAAC,UAAU,GAAG,kBAAU,CAAC,cAAc,CAAC;SAC5C;KACF;IACD,qCAAqC;AACvC,CAAC;AA7BD,4DA6BC","sourcesContent":["import is from '@sindresorhus/is';\nimport * as datasourceTerraformProvider from '../../datasource/terraform-provider';\nimport { SkipReason } from '../../types';\nimport { isValid } from '../../versioning/hashicorp';\nimport { PackageDependency } from '../common';\nimport {\n  ExtractionResult,\n  TerraformDependencyTypes,\n  keyValueExtractionRegex,\n} from './util';\n\nexport const sourceExtractionRegex = /^(?:(?<hostname>[^/]+)\\/)?(?<namespace>[^/]+)\\/(?<type>[^/]+)/;\n\nexport function extractTerraformProvider(\n  startingLine: number,\n  lines: string[],\n  moduleName: string\n): ExtractionResult {\n  let lineNumber = startingLine;\n  let line: string;\n  const deps: PackageDependency[] = [];\n  const dep: PackageDependency = {\n    managerData: {\n      moduleName,\n      terraformDependencyType: TerraformDependencyTypes.provider,\n    },\n  };\n  do {\n    lineNumber += 1;\n    line = lines[lineNumber];\n    const kvMatch = keyValueExtractionRegex.exec(line);\n    if (kvMatch) {\n      if (kvMatch.groups.key === 'version') {\n        dep.currentValue = kvMatch.groups.value;\n      } else if (kvMatch.groups.key === 'source') {\n        dep.managerData.source = kvMatch.groups.value;\n        dep.managerData.sourceLine = lineNumber;\n      }\n    }\n  } while (line.trim() !== '}');\n  deps.push(dep);\n  return { lineNumber, dependencies: deps };\n}\n\nexport function analyzeTerraformProvider(dep: PackageDependency): void {\n  /* eslint-disable no-param-reassign */\n  dep.depType = 'terraform';\n  dep.depName = dep.managerData.moduleName;\n  dep.depNameShort = dep.managerData.moduleName;\n  dep.datasource = datasourceTerraformProvider.id;\n  if (!isValid(dep.currentValue)) {\n    dep.skipReason = SkipReason.UnsupportedVersion;\n  }\n\n  if (is.nonEmptyString(dep.managerData.source)) {\n    const source = sourceExtractionRegex.exec(dep.managerData.source);\n    if (source) {\n      // buildin providers https://github.com/terraform-providers\n      if (source.groups.namespace === 'terraform-providers') {\n        dep.registryUrls = [`https://releases.hashicorp.com`];\n      } else {\n        dep.lookupName = `${source.groups.namespace}/${source.groups.type}`;\n        if (source.groups.hostname) {\n          dep.registryUrls = [`https://${source.groups.hostname}`];\n        } else {\n          dep.registryUrls = [`https://registry.terraform.io`];\n        }\n      }\n    } else {\n      dep.skipReason = SkipReason.UnsupportedUrl;\n    }\n  }\n  /* eslint-enable no-param-reassign */\n}\n"]}