{"version":3,"file":"extract.js","sourceRoot":"","sources":["../../../lib/manager/pub/extract.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAmC;AACnC,sEAAwD;AACxD,yCAAsC;AACtC,uCAAyC;AAGzC,SAAS,OAAO,CACd,OAA6B,EAC7B,MAA2B;IAE3B,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,EAAE,CAAC;KACX;IACD,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE;QAClD,IAAI,OAAO,KAAK,MAAM,EAAE;YACtB,OAAO,GAAG,CAAC;SACZ;QAED,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC;QAEjC,IAAI,YAAY,GAAkB,IAAI,CAAC;QACvC,IAAI,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,OAAO,EAAE;YACpB,YAAY,GAAG,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;SAC3C;aAAM,IAAI,OAAO,EAAE;YAClB,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,YAAY,GAAG,OAAO,CAAC;aACxB;YACD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE;gBAC/B,YAAY,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC;aACnC;SACF;QAED,MAAM,GAAG,GAAsB,EAAE,GAAG,MAAM,EAAE,OAAO,EAAE,YAAY,EAAE,CAAC;QACpE,IAAI,CAAC,YAAY,EAAE;YACjB,GAAG,CAAC,UAAU,GAAG,kBAAU,CAAC,WAAW,CAAC;SACzC;QAED,OAAO,CAAC,GAAG,GAAG,EAAE,GAAG,CAAC,CAAC;IACvB,CAAC,EAAE,EAAE,CAAC,CAAC;AACT,CAAC;AAED,SAAgB,kBAAkB,CAChC,OAAe,EACf,WAAmB;IAEnB,IAAI;QACF,MAAM,GAAG,GAAG,kBAAQ,CAAC,OAAO,CAAC,CAAC;QAC9B,MAAM,IAAI,GAAG;YACX,GAAG,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE;gBAC3B,OAAO,EAAE,cAAc;aACxB,CAAC;YACF,GAAG,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE;gBAC/B,OAAO,EAAE,kBAAkB;aAC5B,CAAC;SACH,CAAC;QAEF,IAAI,IAAI,CAAC,MAAM,EAAE;YACf,OAAO;gBACL,WAAW;gBACX,UAAU,EAAE,cAAc,CAAC,EAAE;gBAC7B,IAAI;aACL,CAAC;SACH;KACF;IAAC,OAAO,CAAC,EAAE;QACV,eAAM,CAAC,KAAK,CAAC,EAAE,WAAW,EAAE,EAAE,0BAA0B,CAAC,CAAC;KAC3D;IACD,OAAO,IAAI,CAAC;AACd,CAAC;AA1BD,gDA0BC","sourcesContent":["import { safeLoad } from 'js-yaml';\nimport * as datasourceDart from '../../datasource/dart';\nimport { logger } from '../../logger';\nimport { SkipReason } from '../../types';\nimport { PackageDependency, PackageFile } from '../common';\n\nfunction getDeps(\n  depsObj: { [x: string]: any },\n  preset: { depType: string }\n): PackageDependency[] {\n  if (!depsObj) {\n    return [];\n  }\n  return Object.keys(depsObj).reduce((acc, depName) => {\n    if (depName === 'meta') {\n      return acc;\n    }\n\n    const section = depsObj[depName];\n\n    let currentValue: string | null = null;\n    if (section?.version) {\n      currentValue = section.version.toString();\n    } else if (section) {\n      if (typeof section === 'string') {\n        currentValue = section;\n      }\n      if (typeof section === 'number') {\n        currentValue = section.toString();\n      }\n    }\n\n    const dep: PackageDependency = { ...preset, depName, currentValue };\n    if (!currentValue) {\n      dep.skipReason = SkipReason.NotAVersion;\n    }\n\n    return [...acc, dep];\n  }, []);\n}\n\nexport function extractPackageFile(\n  content: string,\n  packageFile: string\n): PackageFile | null {\n  try {\n    const doc = safeLoad(content);\n    const deps = [\n      ...getDeps(doc.dependencies, {\n        depType: 'dependencies',\n      }),\n      ...getDeps(doc.dev_dependencies, {\n        depType: 'dev_dependencies',\n      }),\n    ];\n\n    if (deps.length) {\n      return {\n        packageFile,\n        datasource: datasourceDart.id,\n        deps,\n      };\n    }\n  } catch (e) {\n    logger.debug({ packageFile }, 'Can not parse dependency');\n  }\n  return null;\n}\n"]}