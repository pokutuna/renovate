{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../../../lib/manager/npm/extract/npm.ts"],"names":[],"mappings":";;;AAAA,4CAAyC;AACzC,yCAAiD;AAG1C,KAAK,UAAU,UAAU,CAC9B,QAAgB;IAEhB,MAAM,OAAO,GAAG,MAAM,kBAAa,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IACtD,IAAI;QACF,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QACvC,MAAM,QAAQ,GAA2B,EAAE,CAAC;QAC5C,KAAK,MAAM,CAAC,KAAK,EAAE,GAAG,CAAC,IAAI,MAAM,CAAC,OAAO,CACvC,CAAC,UAAU,CAAC,YAAY,IAAI,EAAE,CAAkB,CACjD,EAAE;YACD,eAAM,CAAC,KAAK,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;YAC9C,QAAQ,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC;SAC/B;QACD,OAAO,QAAQ,CAAC;KACjB;IAAC,OAAO,GAAG,EAAE;QACZ,eAAM,CAAC,KAAK,CAAC,EAAE,QAAQ,EAAE,GAAG,EAAE,EAAE,0CAA0C,CAAC,CAAC;QAC5E,OAAO,EAAE,CAAC;KACX;AACH,CAAC;AAlBD,gCAkBC","sourcesContent":["import { logger } from '../../../logger';\nimport { readLocalFile } from '../../../util/fs';\nimport { LockFileEntry } from './common';\n\nexport async function getNpmLock(\n  filePath: string\n): Promise<Record<string, string>> {\n  const lockRaw = await readLocalFile(filePath, 'utf8');\n  try {\n    const lockParsed = JSON.parse(lockRaw);\n    const lockFile: Record<string, string> = {};\n    for (const [entry, val] of Object.entries(\n      (lockParsed.dependencies || {}) as LockFileEntry\n    )) {\n      logger.trace({ entry, version: val.version });\n      lockFile[entry] = val.version;\n    }\n    return lockFile;\n  } catch (err) {\n    logger.debug({ filePath, err }, 'Warning: Exception parsing npm lock file');\n    return {};\n  }\n}\n"]}