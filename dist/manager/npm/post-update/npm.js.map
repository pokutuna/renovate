{"version":3,"file":"npm.js","sourceRoot":"","sources":["../../../../lib/manager/npm/post-update/npm.ts"],"names":[],"mappings":"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","sourcesContent":["import { validRange } from 'semver';\nimport { quote } from 'shlex';\nimport { join } from 'upath';\nimport { SYSTEM_INSUFFICIENT_DISK_SPACE } from '../../../constants/error-messages';\nimport { logger } from '../../../logger';\nimport { ExecOptions, exec } from '../../../util/exec';\nimport { move, pathExists, readFile, remove } from '../../../util/fs';\nimport { PostUpdateConfig, Upgrade } from '../../common';\nimport { getNodeConstraint } from './node-version';\n\nexport interface GenerateLockFileResult {\n  error?: boolean;\n  lockFile?: string;\n  stderr?: string;\n}\n\nexport async function generateLockFile(\n  cwd: string,\n  env: NodeJS.ProcessEnv,\n  filename: string,\n  config: PostUpdateConfig = {},\n  upgrades: Upgrade[] = []\n): Promise<GenerateLockFileResult> {\n  logger.debug(`Spawning npm install to create ${cwd}/${filename}`);\n  const { skipInstalls, postUpdateOptions } = config;\n\n  let lockFile = null;\n  try {\n    let installNpm = 'npm i -g npm';\n    const npmCompatibility = config.compatibility?.npm;\n    if (validRange(npmCompatibility)) {\n      installNpm += `@${quote(npmCompatibility)}`;\n    }\n    const preCommands = [installNpm];\n    const commands = [];\n    let cmdOptions = '';\n    if (postUpdateOptions?.includes('npmDedupe') || skipInstalls === false) {\n      logger.debug('Performing node_modules install');\n      cmdOptions += '--ignore-scripts --no-audit';\n    } else {\n      logger.debug('Updating lock file only');\n      cmdOptions += '--package-lock-only --ignore-scripts --no-audit';\n    }\n    const tagConstraint = await getNodeConstraint(config);\n    const execOptions: ExecOptions = {\n      cwd,\n      extraEnv: {\n        NPM_CONFIG_CACHE: env.NPM_CONFIG_CACHE,\n        npm_config_store: env.npm_config_store,\n      },\n      docker: {\n        image: 'renovate/node',\n        tagScheme: 'npm',\n        tagConstraint,\n        preCommands,\n      },\n    };\n    if (config.dockerMapDotfiles) {\n      const homeDir =\n        process.env.HOME || process.env.HOMEPATH || process.env.USERPROFILE;\n      const homeNpmrc = join(homeDir, '.npmrc');\n      execOptions.docker.volumes = [[homeNpmrc, '/home/ubuntu/.npmrc']];\n    }\n\n    if (!upgrades.every((upgrade) => upgrade.isLockfileUpdate)) {\n      // This command updates the lock file based on package.json\n      commands.push(`npm install ${cmdOptions}`.trim());\n    }\n\n    // rangeStrategy = update-lockfile\n    const lockUpdates = upgrades.filter((upgrade) => upgrade.isLockfileUpdate);\n    if (lockUpdates.length) {\n      logger.debug('Performing lockfileUpdate (npm)');\n      const updateCmd =\n        `npm install ${cmdOptions}` +\n        lockUpdates\n          .map((update) => ` ${update.depName}@${update.toVersion}`)\n          .join('');\n      commands.push(updateCmd);\n    }\n\n    // postUpdateOptions\n    if (config.postUpdateOptions?.includes('npmDedupe')) {\n      logger.debug('Performing npm dedupe');\n      commands.push('npm dedupe');\n    }\n\n    if (upgrades.find((upgrade) => upgrade.isLockFileMaintenance)) {\n      const lockFileName = join(cwd, filename);\n      logger.debug(\n        `Removing ${lockFileName} first due to lock file maintenance upgrade`\n      );\n      try {\n        await remove(lockFileName);\n      } catch (err) /* istanbul ignore next */ {\n        logger.debug(\n          { err, lockFileName },\n          'Error removing yarn.lock for lock file maintenance'\n        );\n      }\n    }\n\n    // Run the commands\n    await exec(commands, execOptions);\n\n    // massage to shrinkwrap if necessary\n    if (\n      filename === 'npm-shrinkwrap.json' &&\n      (await pathExists(join(cwd, 'package-lock.json')))\n    ) {\n      await move(\n        join(cwd, 'package-lock.json'),\n        join(cwd, 'npm-shrinkwrap.json')\n      );\n    }\n\n    // Read the result\n    lockFile = await readFile(join(cwd, filename), 'utf8');\n  } catch (err) /* istanbul ignore next */ {\n    logger.debug(\n      {\n        err,\n        type: 'npm',\n      },\n      'lock file error'\n    );\n    if (err.stderr?.includes('ENOSPC: no space left on device')) {\n      throw new Error(SYSTEM_INSUFFICIENT_DISK_SPACE);\n    }\n    return { error: true, stderr: err.stderr };\n  }\n  return { lockFile };\n}\n"]}