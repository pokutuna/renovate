{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/datasource/docker/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { OutgoingHttpHeaders } from 'http';\nimport URL from 'url';\nimport AWS from 'aws-sdk';\nimport hasha from 'hasha';\nimport parseLinkHeader from 'parse-link-header';\nimport wwwAuthenticate from 'www-authenticate';\nimport { HOST_DISABLED } from '../../constants/error-messages';\nimport { logger } from '../../logger';\nimport { HostRule } from '../../types';\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport * as packageCache from '../../util/cache/package';\nimport * as hostRules from '../../util/host-rules';\nimport { Http, HttpResponse } from '../../util/http';\nimport { GetReleasesConfig, ReleaseResult } from '../common';\n\n// TODO: add got typings when available\n// TODO: replace www-authenticate with https://www.npmjs.com/package/auth-header ?\n\nexport const id = 'docker';\nexport const defaultRegistryUrls = ['https://index.docker.io'];\nexport const registryStrategy = 'first';\n\nexport const defaultConfig = {\n  managerBranchPrefix: 'docker-',\n  commitMessageTopic: '{{{depName}}} Docker tag',\n  major: { enabled: false },\n  commitMessageExtra:\n    'to v{{#if isMajor}}{{{newMajor}}}{{else}}{{{newVersion}}}{{/if}}',\n  digest: {\n    branchTopic: '{{{depNameSanitized}}}-{{{currentValue}}}',\n    commitMessageExtra: 'to {{newDigestShort}}',\n    commitMessageTopic:\n      '{{{depName}}}{{#if currentValue}}:{{{currentValue}}}{{/if}} Docker digest',\n    group: {\n      commitMessageTopic: '{{{groupName}}}',\n      commitMessageExtra: '',\n    },\n  },\n  pin: {\n    commitMessageExtra: '',\n    groupName: 'Docker digests',\n    group: {\n      commitMessageTopic: '{{{groupName}}}',\n      branchTopic: 'digests-pin',\n    },\n  },\n  group: {\n    commitMessageTopic: '{{{groupName}}} Docker tags',\n  },\n};\n\nconst http = new Http(id);\n\nconst ecrRegex = /\\d+\\.dkr\\.ecr\\.([-a-z0-9]+)\\.amazonaws\\.com/;\n\nexport interface RegistryRepository {\n  registry: string;\n  repository: string;\n}\n\nexport function getRegistryRepository(\n  lookupName: string,\n  registryUrl: string\n): RegistryRepository {\n  if (registryUrl !== defaultRegistryUrls[0]) {\n    const dockerRegistry = registryUrl\n      .replace('https://', '')\n      .replace(/\\/?$/, '/');\n    if (lookupName.startsWith(dockerRegistry)) {\n      return {\n        registry: dockerRegistry,\n        repository: lookupName.replace(dockerRegistry, ''),\n      };\n    }\n  }\n  let registry: string;\n  const split = lookupName.split('/');\n  if (split.length > 1 && (split[0].includes('.') || split[0].includes(':'))) {\n    [registry] = split;\n    split.shift();\n  }\n  let repository = split.join('/');\n  if (!registry) {\n    registry = registryUrl;\n  }\n  if (registry === 'docker.io') {\n    registry = 'index.docker.io';\n  }\n  if (!/^https?:\\/\\//.exec(registry)) {\n    registry = `https://${registry}`;\n  }\n  const opts = hostRules.find({ hostType: id, url: registry });\n  if (opts?.insecureRegistry) {\n    registry = registry.replace('https', 'http');\n  }\n  if (registry.endsWith('.docker.io') && !repository.includes('/')) {\n    repository = 'library/' + repository;\n  }\n  return {\n    registry,\n    repository,\n  };\n}\n\nfunction getECRAuthToken(\n  region: string,\n  opts: HostRule\n): Promise<string | null> {\n  const config = { region, accessKeyId: undefined, secretAccessKey: undefined };\n  if (opts.username && opts.password) {\n    config.accessKeyId = opts.username;\n    config.secretAccessKey = opts.password;\n  }\n  const ecr = new AWS.ECR(config);\n  return new Promise<string>((resolve) => {\n    ecr.getAuthorizationToken({}, (err, data) => {\n      if (err) {\n        logger.trace({ err }, 'err');\n        logger.debug('ECR getAuthorizationToken error');\n        resolve(null);\n      } else {\n        const authorizationToken =\n          data?.authorizationData?.[0]?.authorizationToken;\n        if (authorizationToken) {\n          resolve(authorizationToken);\n        } else {\n          logger.warn(\n            'Could not extract authorizationToken from ECR getAuthorizationToken response'\n          );\n          resolve(null);\n        }\n      }\n    });\n  });\n}\n\nasync function getAuthHeaders(\n  registry: string,\n  repository: string\n): Promise<OutgoingHttpHeaders | null> {\n  try {\n    const apiCheckUrl = `${registry}/v2/`;\n    const apiCheckResponse = await http.get(apiCheckUrl, {\n      throwHttpErrors: false,\n    });\n    if (apiCheckResponse.headers['www-authenticate'] === undefined) {\n      return {};\n    }\n    const authenticateHeader = new wwwAuthenticate.parsers.WWW_Authenticate(\n      apiCheckResponse.headers['www-authenticate']\n    );\n\n    const opts: HostRule & {\n      headers?: Record<string, string>;\n    } = hostRules.find({ hostType: id, url: apiCheckUrl });\n    if (ecrRegex.test(registry)) {\n      const [, region] = ecrRegex.exec(registry);\n      const auth = await getECRAuthToken(region, opts);\n      if (auth) {\n        opts.headers = { authorization: `Basic ${auth}` };\n      }\n    } else if (opts.username && opts.password) {\n      const auth = Buffer.from(`${opts.username}:${opts.password}`).toString(\n        'base64'\n      );\n      opts.headers = { authorization: `Basic ${auth}` };\n    }\n    delete opts.username;\n    delete opts.password;\n\n    if (authenticateHeader.scheme.toUpperCase() === 'BASIC') {\n      logger.debug(`Using Basic auth for docker registry ${repository}`);\n      await http.get(apiCheckUrl, opts);\n      return opts.headers;\n    }\n\n    // prettier-ignore\n    const authUrl = `${authenticateHeader.parms.realm}?service=${authenticateHeader.parms.service}&scope=repository:${repository}:pull`;\n    logger.trace(\n      `Obtaining docker registry token for ${repository} using url ${authUrl}`\n    );\n    const authResponse = (\n      await http.getJson<{ token?: string; access_token?: string }>(\n        authUrl,\n        opts\n      )\n    ).body;\n\n    const token = authResponse.token || authResponse.access_token;\n    // istanbul ignore if\n    if (!token) {\n      logger.warn('Failed to obtain docker registry token');\n      return null;\n    }\n    return {\n      authorization: `Bearer ${token}`,\n    };\n  } catch (err) /* istanbul ignore next */ {\n    if (err.host === 'quay.io') {\n      // TODO: debug why quay throws errors\n      return null;\n    }\n    if (err.statusCode === 401) {\n      logger.debug(\n        { registry, dockerRepository: repository },\n        'Unauthorized docker lookup'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.statusCode === 403) {\n      logger.debug(\n        { registry, dockerRepository: repository },\n        'Not allowed to access docker registry'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    // prettier-ignore\n    if (err.name === 'RequestError' && registry.endsWith('docker.io')) { // lgtm [js/incomplete-url-substring-sanitization]\n      throw new ExternalHostError(err);\n    }\n    // prettier-ignore\n    if (err.statusCode === 429 && registry.endsWith('docker.io')) { // lgtm [js/incomplete-url-substring-sanitization]\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode >= 500 && err.statusCode < 600) {\n      throw new ExternalHostError(err);\n    }\n    if (err.message === HOST_DISABLED) {\n      logger.trace(\n        { registry, dockerRepository: repository, err },\n        'Host disabled'\n      );\n      return null;\n    }\n    logger.warn(\n      { registry, dockerRepository: repository, err },\n      'Error obtaining docker token'\n    );\n    return null;\n  }\n}\n\nfunction digestFromManifestStr(str: hasha.HashaInput): string {\n  return 'sha256:' + hasha(str, { algorithm: 'sha256' });\n}\n\nfunction extractDigestFromResponse(manifestResponse: HttpResponse): string {\n  if (manifestResponse.headers['docker-content-digest'] === undefined) {\n    return digestFromManifestStr(manifestResponse.body);\n  }\n  return manifestResponse.headers['docker-content-digest'] as string;\n}\n\nasync function getManifestResponse(\n  registry: string,\n  repository: string,\n  tag: string\n): Promise<HttpResponse> {\n  logger.debug(`getManifestResponse(${registry}, ${repository}, ${tag})`);\n  try {\n    const headers = await getAuthHeaders(registry, repository);\n    if (!headers) {\n      logger.debug('No docker auth found - returning');\n      return null;\n    }\n    headers.accept = 'application/vnd.docker.distribution.manifest.v2+json';\n    const url = `${registry}/v2/${repository}/manifests/${tag}`;\n    const manifestResponse = await http.get(url, {\n      headers,\n    });\n    return manifestResponse;\n  } catch (err) /* istanbul ignore next */ {\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    if (err.statusCode === 401) {\n      logger.debug(\n        { registry, dockerRepository: repository },\n        'Unauthorized docker lookup'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    if (err.statusCode === 404) {\n      logger.debug(\n        {\n          err,\n          registry,\n          dockerRepository: repository,\n          tag,\n        },\n        'Docker Manifest is unknown'\n      );\n      return null;\n    }\n    // prettier-ignore\n    if (err.statusCode === 429 && registry.endsWith('docker.io')) { // lgtm [js/incomplete-url-substring-sanitization]\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode >= 500 && err.statusCode < 600) {\n      throw new ExternalHostError(err);\n    }\n    if (err.code === 'ETIMEDOUT') {\n      logger.debug(\n        { registry },\n        'Timeout when attempting to connect to docker registry'\n      );\n      logger.debug({ err });\n      return null;\n    }\n    logger.debug(\n      {\n        err,\n        registry,\n        dockerRepository: repository,\n        tag,\n      },\n      'Unknown Error looking up docker manifest'\n    );\n    return null;\n  }\n}\n\n/**\n * docker.getDigest\n *\n * The `newValue` supplied here should be a valid tag for the docker image.\n *\n * This function will:\n *  - Look up a sha256 digest for a tag on its registry\n *  - Return the digest as a string\n */\nexport async function getDigest(\n  { registryUrl, lookupName }: GetReleasesConfig,\n  newValue?: string\n): Promise<string | null> {\n  const { registry, repository } = getRegistryRepository(\n    lookupName,\n    registryUrl\n  );\n  logger.debug(`getDigest(${registry}, ${repository}, ${newValue})`);\n  const newTag = newValue || 'latest';\n  const cacheNamespace = 'datasource-docker-digest';\n  const cacheKey = `${registry}:${repository}:${newTag}`;\n  let digest = null;\n  try {\n    const cachedResult = await packageCache.get(cacheNamespace, cacheKey);\n    // istanbul ignore if\n    if (cachedResult !== undefined) {\n      return cachedResult;\n    }\n    const manifestResponse = await getManifestResponse(\n      registry,\n      repository,\n      newTag\n    );\n    if (manifestResponse) {\n      digest = extractDigestFromResponse(manifestResponse) || null;\n      logger.debug({ digest }, 'Got docker digest');\n    }\n  } catch (err) /* istanbul ignore next */ {\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    logger.debug(\n      {\n        err,\n        lookupName,\n        newTag,\n      },\n      'Unknown Error looking up docker image digest'\n    );\n  }\n  const cacheMinutes = 30;\n  await packageCache.set(cacheNamespace, cacheKey, digest, cacheMinutes);\n  return digest;\n}\n\nasync function getTags(\n  registry: string,\n  repository: string\n): Promise<string[] | null> {\n  let tags: string[] = [];\n  try {\n    const cacheNamespace = 'datasource-docker-tags';\n    const cacheKey = `${registry}:${repository}`;\n    const cachedResult = await packageCache.get<string[]>(\n      cacheNamespace,\n      cacheKey\n    );\n    // istanbul ignore if\n    if (cachedResult !== undefined) {\n      return cachedResult;\n    }\n    // AWS ECR limits the maximum number of results to 1000\n    // See https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_DescribeRepositories.html#ECR-DescribeRepositories-request-maxResults\n    const limit = ecrRegex.test(registry) ? 1000 : 10000;\n    let url = `${registry}/v2/${repository}/tags/list?n=${limit}`;\n    const headers = await getAuthHeaders(registry, repository);\n    if (!headers) {\n      logger.debug('Failed to get authHeaders for getTags lookup');\n      return null;\n    }\n    let page = 1;\n    do {\n      const res = await http.getJson<{ tags: string[] }>(url, { headers });\n      tags = tags.concat(res.body.tags);\n      const linkHeader = parseLinkHeader(res.headers.link as string);\n      url = linkHeader?.next ? URL.resolve(url, linkHeader.next.url) : null;\n      page += 1;\n    } while (url && page < 20);\n    const cacheMinutes = 15;\n    await packageCache.set(cacheNamespace, cacheKey, tags, cacheMinutes);\n    return tags;\n  } catch (err) /* istanbul ignore next */ {\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    if (err.statusCode === 404 && !repository.includes('/')) {\n      logger.debug(\n        `Retrying Tags for ${registry}/${repository} using library/ prefix`\n      );\n      return getTags(registry, 'library/' + repository);\n    }\n    // prettier-ignore\n    if (err.statusCode === 429 && registry.endsWith('docker.io')) { // lgtm [js/incomplete-url-substring-sanitization]\n      logger.warn(\n        { registry, dockerRepository: repository, err },\n        'docker registry failure: too many requests'\n      );\n      throw new ExternalHostError(err);\n    }\n    if (err.statusCode >= 500 && err.statusCode < 600) {\n      logger.warn(\n        { registry, dockerRepository: repository, err },\n        'docker registry failure: internal error'\n      );\n      throw new ExternalHostError(err);\n    }\n    throw err;\n  }\n}\n\n/*\n * docker.getLabels\n *\n * This function will:\n *  - Return the labels for the requested image\n */\n\nasync function getLabels(\n  registry: string,\n  repository: string,\n  tag: string\n): Promise<Record<string, string>> {\n  logger.debug(`getLabels(${registry}, ${repository}, ${tag})`);\n  const cacheNamespace = 'datasource-docker-labels';\n  const cacheKey = `${registry}:${repository}:${tag}`;\n  const cachedResult = await packageCache.get<Record<string, string>>(\n    cacheNamespace,\n    cacheKey\n  );\n  // istanbul ignore if\n  if (cachedResult !== undefined) {\n    return cachedResult;\n  }\n  try {\n    const manifestResponse = await getManifestResponse(\n      registry,\n      repository,\n      tag\n    );\n    // If getting the manifest fails here, then abort\n    // This means that the latest tag doesn't have a manifest, which shouldn't\n    // be possible\n    // istanbul ignore if\n    if (!manifestResponse) {\n      logger.debug(\n        {\n          registry,\n          dockerRepository: repository,\n          tag,\n        },\n        'docker registry failure: failed to get manifest for tag'\n      );\n      return {};\n    }\n    const manifest = JSON.parse(manifestResponse.body);\n    // istanbul ignore if\n    if (manifest.schemaVersion !== 2) {\n      logger.debug(\n        { registry, dockerRepository: repository, tag },\n        'Manifest schema version is not 2'\n      );\n      return {};\n    }\n    let labels: Record<string, string> = {};\n    const configDigest = manifest.config.digest;\n    const headers = await getAuthHeaders(registry, repository);\n    // istanbul ignore if: Should never be happen\n    if (!headers) {\n      logger.debug('No docker auth found - returning');\n      return {};\n    }\n    const url = `${registry}/v2/${repository}/blobs/${configDigest}`;\n    const configResponse = await http.get(url, {\n      headers,\n    });\n    labels = JSON.parse(configResponse.body).config.Labels;\n\n    if (labels) {\n      logger.debug(\n        {\n          labels,\n        },\n        'found labels in manifest'\n      );\n    }\n    const cacheMinutes = 60;\n    await packageCache.set(cacheNamespace, cacheKey, labels, cacheMinutes);\n    return labels;\n  } catch (err) /* istanbul ignore next: should be tested in future */ {\n    if (err instanceof ExternalHostError) {\n      throw err;\n    }\n    if (err.statusCode === 400 || err.statusCode === 401) {\n      logger.debug(\n        { registry, dockerRepository: repository, err },\n        'Unauthorized docker lookup'\n      );\n    } else if (err.statusCode === 404) {\n      logger.warn(\n        {\n          err,\n          registry,\n          dockerRepository: repository,\n          tag,\n        },\n        'Config Manifest is unknown'\n      );\n    } else if (\n      err.statusCode === 429 &&\n      registry.endsWith('docker.io') // lgtm [js/incomplete-url-substring-sanitization]\n    ) {\n      logger.warn({ err }, 'docker registry failure: too many requests');\n    } else if (err.statusCode >= 500 && err.statusCode < 600) {\n      logger.debug(\n        {\n          err,\n          registry,\n          dockerRepository: repository,\n          tag,\n        },\n        'docker registry failure: internal error'\n      );\n    } else if (\n      err.code === 'ERR_TLS_CERT_ALTNAME_INVALID' ||\n      err.code === 'ETIMEDOUT'\n    ) {\n      logger.debug({ registry, err }, 'Error connecting to docker registry');\n    } else if (registry === 'https://quay.io') {\n      // istanbul ignore next\n      logger.debug(\n        'Ignoring quay.io errors until they fully support v2 schema'\n      );\n    } else {\n      logger.info(\n        { registry, dockerRepository: repository, tag, err },\n        'Unknown error getting Docker labels'\n      );\n    }\n    return {};\n  }\n}\n\n/**\n * docker.getReleases\n *\n * A docker image usually looks something like this: somehost.io/owner/repo:8.1.0-alpine\n * In the above:\n *  - 'somehost.io' is the registry\n *  - 'owner/repo' is the package name\n *  - '8.1.0-alpine' is the tag\n *\n * This function will filter only tags that contain a semver version\n */\nexport async function getReleases({\n  lookupName,\n  registryUrl,\n}: GetReleasesConfig): Promise<ReleaseResult | null> {\n  const { registry, repository } = getRegistryRepository(\n    lookupName,\n    registryUrl\n  );\n  const tags = await getTags(registry, repository);\n  if (!tags) {\n    return null;\n  }\n  const releases = tags.map((version) => ({ version }));\n  const ret: ReleaseResult = {\n    dockerRegistry: registry,\n    dockerRepository: repository,\n    releases,\n  };\n\n  const latestTag = tags.includes('latest') ? 'latest' : tags[tags.length - 1];\n  const labels = await getLabels(registry, repository, latestTag);\n  if (labels && 'org.opencontainers.image.source' in labels) {\n    ret.sourceUrl = labels['org.opencontainers.image.source'];\n  }\n  return ret;\n}\n"]}