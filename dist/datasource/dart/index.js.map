{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/datasource/dart/index.ts"],"names":[],"mappings":";;;AAAA,gFAA2E;AAC3E,0CAAqD;AAGxC,QAAA,EAAE,GAAG,MAAM,CAAC;AAEzB,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,UAAE,CAAC,CAAC;AAEnB,KAAK,UAAU,WAAW,CAAC,EAChC,UAAU,GACQ;IAClB,IAAI,MAAM,GAAkB,IAAI,CAAC;IACjC,MAAM,MAAM,GAAG,yCAAyC,UAAU,EAAE,CAAC;IAWrE,IAAI,GAAG,GAA6B,IAAI,CAAC;IACzC,IAAI;QACF,GAAG,GAAG,MAAM,IAAI,CAAC,OAAO,CAAa,MAAM,CAAC,CAAC;KAC9C;IAAC,OAAO,GAAG,EAAE;QACZ,IACE,GAAG,CAAC,UAAU,KAAK,GAAG;YACtB,CAAC,GAAG,CAAC,UAAU,IAAI,GAAG,IAAI,GAAG,CAAC,UAAU,GAAG,GAAG,CAAC,EAC/C;YACA,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;SAClC;QACD,MAAM,GAAG,CAAC;KACX;IAED,MAAM,IAAI,GAAG,GAAG,aAAH,GAAG,uBAAH,GAAG,CAAE,IAAI,CAAC;IACvB,IAAI,IAAI,EAAE;QACR,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC;QAClC,IAAI,QAAQ,IAAI,MAAM,EAAE;YACtB,MAAM,GAAG;gBACP,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,OAAO,EAAE,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC;oBACvD,OAAO;oBACP,gBAAgB,EAAE,SAAS;iBAC5B,CAAC,CAAC;aACJ,CAAC;YAEF,MAAM,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;YAC/B,IAAI,OAAO,EAAE;gBACX,IAAI,OAAO,CAAC,QAAQ,EAAE;oBACpB,MAAM,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;iBACpC;gBAED,IAAI,OAAO,CAAC,UAAU,EAAE;oBACtB,MAAM,CAAC,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC;iBACvC;aACF;SACF;KACF;IAED,OAAO,MAAM,CAAC;AAChB,CAAC;AArDD,kCAqDC","sourcesContent":["import { ExternalHostError } from '../../types/errors/external-host-error';\nimport { Http, HttpResponse } from '../../util/http';\nimport { GetReleasesConfig, ReleaseResult } from '../common';\n\nexport const id = 'dart';\n\nconst http = new Http(id);\n\nexport async function getReleases({\n  lookupName,\n}: GetReleasesConfig): Promise<ReleaseResult | null> {\n  let result: ReleaseResult = null;\n  const pkgUrl = `https://pub.dartlang.org/api/packages/${lookupName}`;\n  interface DartResult {\n    versions?: {\n      version: string;\n      published?: string;\n    }[];\n    latest?: {\n      pubspec?: { homepage?: string; repository?: string };\n    };\n  }\n\n  let raw: HttpResponse<DartResult> = null;\n  try {\n    raw = await http.getJson<DartResult>(pkgUrl);\n  } catch (err) {\n    if (\n      err.statusCode === 429 ||\n      (err.statusCode >= 500 && err.statusCode < 600)\n    ) {\n      throw new ExternalHostError(err);\n    }\n    throw err;\n  }\n\n  const body = raw?.body;\n  if (body) {\n    const { versions, latest } = body;\n    if (versions && latest) {\n      result = {\n        releases: body.versions.map(({ version, published }) => ({\n          version,\n          releaseTimestamp: published,\n        })),\n      };\n\n      const pubspec = latest.pubspec;\n      if (pubspec) {\n        if (pubspec.homepage) {\n          result.homepage = pubspec.homepage;\n        }\n\n        if (pubspec.repository) {\n          result.sourceUrl = pubspec.repository;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n"]}