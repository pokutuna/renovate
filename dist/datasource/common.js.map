{"version":3,"file":"common.js","sourceRoot":"","sources":["../../lib/datasource/common.ts"],"names":[],"mappings":";;;AA6BA,SAAgB,sBAAsB,CACpC,KAAU;IAEV,OAAO,CACJ,KAA8B,CAAC,UAAU,KAAK,SAAS;QACvD,KAA8B,CAAC,OAAO,KAAK,SAAS,CACtD,CAAC;AACJ,CAAC;AAPD,wDAOC","sourcesContent":["export interface Config {\n  datasource?: string;\n  depName?: string;\n  lookupName?: string;\n  registryUrls?: string[];\n}\n\nexport interface DigestConfig extends Config {\n  registryUrl?: string;\n}\n\ninterface ReleasesConfigBase {\n  compatibility?: Record<string, string>;\n  npmrc?: string;\n  registryUrls?: string[];\n}\n\nexport interface GetReleasesConfig extends ReleasesConfigBase {\n  lookupName: string;\n  registryUrl?: string;\n}\n\nexport interface GetPkgReleasesConfig extends ReleasesConfigBase {\n  datasource: string;\n  depName: string;\n  lookupName?: string;\n  versioning?: string;\n}\n\nexport function isGetPkgReleasesConfig(\n  input: any\n): input is GetPkgReleasesConfig {\n  return (\n    (input as GetPkgReleasesConfig).datasource !== undefined &&\n    (input as GetPkgReleasesConfig).depName !== undefined\n  );\n}\n\nexport interface Release {\n  canBeUnpublished?: boolean;\n  changelogUrl?: string;\n  checksumUrl?: string;\n  downloadUrl?: string;\n  gitRef?: string;\n  isDeprecated?: boolean;\n\n  releaseTimestamp?: any;\n  version: string;\n  newDigest?: string;\n}\n\nexport interface ReleaseResult {\n  sourceDirectory?: string;\n  latestVersion?: string;\n  changelogUrl?: string;\n  dependencyUrl?: string;\n  deprecationMessage?: string;\n  display?: string;\n  dockerRegistry?: string;\n  dockerRepository?: string;\n  group?: string;\n  homepage?: string;\n  name?: string;\n  pkgName?: string;\n  releases: Release[];\n  sourceUrl?: string;\n  tags?: Record<string, string>;\n  versions?: any;\n  registryUrl?: string;\n}\n\nexport interface DatasourceApi {\n  id: string;\n  getDigest?(config: DigestConfig, newValue?: string): Promise<string | null>;\n  getReleases(config: GetReleasesConfig): Promise<ReleaseResult | null>;\n  defaultRegistryUrls?: string[];\n  appendRegistryUrls?: string[];\n  defaultConfig?: object;\n  registryStrategy?: 'first' | 'hunt' | 'merge';\n}\n\n// TODO: remove, only for compatabillity\nexport type Datasource = DatasourceApi;\n"]}