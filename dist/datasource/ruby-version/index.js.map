{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/datasource/ruby-version/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,uDAAyC;AAEzC,gFAA2E;AAC3E,uEAAyD;AACzD,0CAAuC;AACvC,gDAAkD;AAGrC,QAAA,EAAE,GAAG,cAAc,CAAC;AAEjC,MAAM,IAAI,GAAG,IAAI,WAAI,CAAC,UAAE,CAAC,CAAC;AAE1B,MAAM,eAAe,GAAG,kDAAkD,CAAC;AAEpE,KAAK,UAAU,WAAW,CAC/B,OAA2B;IAE3B,mCAAmC;IACnC,MAAM,cAAc,GAAG,yBAAyB,CAAC;IACjD,MAAM,YAAY,GAAG,MAAM,YAAY,CAAC,GAAG,CACzC,cAAc,EACd,KAAK,CACN,CAAC;IACF,qBAAqB;IACrB,IAAI,YAAY,EAAE;QAChB,OAAO,YAAY,CAAC;KACrB;IACD,IAAI;QACF,MAAM,GAAG,GAAkB;YACzB,QAAQ,EAAE,2BAA2B;YACrC,SAAS,EAAE,8BAA8B;YACzC,QAAQ,EAAE,EAAE;SACb,CAAC;QACF,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;QACjD,MAAM,IAAI,GAAQ,wBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACvC,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,eAAe,CAAC,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;QACxE,KAAK,MAAM,GAAG,IAAI,IAAI,EAAE;YACtB,MAAM,OAAO,GAAa,KAAK,CAAC,IAAI,CAClC,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,SAAS,CAAC,CACrD,CAAC;YACF,IAAI,OAAO,CAAC,MAAM,EAAE;gBAClB,MAAM,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;gBAChD,IAAI,gBAAS,CAAC,OAAO,CAAC,EAAE;oBACtB,MAAM,gBAAgB,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;oBACpC,MAAM,YAAY,GAAG,OAAO,CAAC,CAAC,CAAC;yBAC5B,OAAO,CAAC,WAAW,EAAE,2BAA2B,CAAC;yBACjD,OAAO,CAAC,eAAe,EAAE,EAAE,CAAC,CAAC;oBAChC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,YAAY,EAAE,CAAC,CAAC;iBAChE;aACF;SACF;QACD,MAAM,YAAY,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;QACvD,OAAO,GAAG,CAAC;KACZ;IAAC,OAAO,GAAG,EAAE;QACZ,MAAM,IAAI,uCAAiB,CAAC,GAAG,CAAC,CAAC;KAClC;AACH,CAAC;AA1CD,kCA0CC","sourcesContent":["import { parse } from 'node-html-parser';\n\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport * as packageCache from '../../util/cache/package';\nimport { Http } from '../../util/http';\nimport { isVersion } from '../../versioning/ruby';\nimport { GetReleasesConfig, ReleaseResult } from '../common';\n\nexport const id = 'ruby-version';\n\nconst http = new Http(id);\n\nconst rubyVersionsUrl = 'https://www.ruby-lang.org/en/downloads/releases/';\n\nexport async function getReleases(\n  _config?: GetReleasesConfig\n): Promise<ReleaseResult> {\n  // First check the persistent cache\n  const cacheNamespace = 'datasource-ruby-version';\n  const cachedResult = await packageCache.get<ReleaseResult>(\n    cacheNamespace,\n    'all'\n  );\n  // istanbul ignore if\n  if (cachedResult) {\n    return cachedResult;\n  }\n  try {\n    const res: ReleaseResult = {\n      homepage: 'https://www.ruby-lang.org',\n      sourceUrl: 'https://github.com/ruby/ruby',\n      releases: [],\n    };\n    const response = await http.get(rubyVersionsUrl);\n    const root: any = parse(response.body);\n    const rows = root.querySelector('.release-list').querySelectorAll('tr');\n    for (const row of rows) {\n      const columns: string[] = Array.from(\n        row.querySelectorAll('td').map((td) => td.innerHTML)\n      );\n      if (columns.length) {\n        const version = columns[0].replace('Ruby ', '');\n        if (isVersion(version)) {\n          const releaseTimestamp = columns[1];\n          const changelogUrl = columns[2]\n            .replace('<a href=\"', 'https://www.ruby-lang.org')\n            .replace('\">more...</a>', '');\n          res.releases.push({ version, releaseTimestamp, changelogUrl });\n        }\n      }\n    }\n    await packageCache.set(cacheNamespace, 'all', res, 15);\n    return res;\n  } catch (err) {\n    throw new ExternalHostError(err);\n  }\n}\n"]}