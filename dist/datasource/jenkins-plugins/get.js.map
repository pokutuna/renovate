{"version":3,"file":"get.js","sourceRoot":"","sources":["../../../lib/datasource/jenkins-plugins/get.ts"],"names":[],"mappings":"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","sourcesContent":["import { logger } from '../../logger';\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport { clone } from '../../util/clone';\nimport { Http } from '../../util/http';\nimport { GetReleasesConfig, Release, ReleaseResult } from '../common';\nimport { id } from './common';\n\nconst http = new Http(id);\n\nconst packageInfoUrl =\n  'https://updates.jenkins.io/current/update-center.actual.json';\nconst packageVersionsUrl =\n  'https://updates.jenkins.io/current/plugin-versions.json';\n\ntype JenkinsCacheTypes = ReleaseResult | Release[];\n\ninterface JenkinsCache<T> {\n  name: string;\n  dataUrl: string;\n  lastSync: Date;\n  cacheTimeMin: number;\n  cache: Record<string, T>;\n  updatePromise?: Promise<void> | undefined;\n}\n\ninterface JenkinsPluginInfo {\n  name: string;\n  scm?: string;\n}\n\ninterface JenkinsPluginVersion {\n  version: string;\n  buildDate?: string;\n  url?: string;\n}\n\ninterface JenkinsPluginsInfoResponse {\n  plugins: Record<string, JenkinsPluginInfo>;\n}\n\ninterface JenkinsPluginsVersionsResponse {\n  plugins: Record<string, Record<string, JenkinsPluginVersion>>;\n}\n\nfunction hasCacheExpired(cache: JenkinsCache<JenkinsCacheTypes>): boolean {\n  const minutesElapsed = Math.floor(\n    (new Date().getTime() - cache.lastSync.getTime()) / (60 * 1000)\n  );\n  return minutesElapsed >= cache.cacheTimeMin;\n}\n\nasync function updateJenkinsCache(\n  cache: JenkinsCache<JenkinsCacheTypes>,\n  updateHandler: () => Promise<void>\n): Promise<void> {\n  if (hasCacheExpired(cache)) {\n    // eslint-disable-next-line no-param-reassign\n    cache.updatePromise =\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      cache.updatePromise || updateHandler();\n    await cache.updatePromise;\n\n    cache.updatePromise = null; // eslint-disable-line no-param-reassign\n  }\n}\n\nfunction updateJenkinsPluginInfoCacheCallback(\n  response: JenkinsPluginsInfoResponse,\n  cache: JenkinsCache<ReleaseResult>\n): void {\n  for (const name of Object.keys(response.plugins || [])) {\n    // eslint-disable-next-line no-param-reassign\n    cache.cache[name] = {\n      name,\n      releases: [], // releases are stored in another cache\n      sourceUrl: response.plugins[name]?.scm,\n    };\n  }\n}\n\nfunction updateJenkinsPluginVersionsCacheCallback(\n  response: JenkinsPluginsVersionsResponse,\n  cache: JenkinsCache<Release[]>\n): void {\n  const plugins = response.plugins;\n  for (const name of Object.keys(plugins || [])) {\n    // eslint-disable-next-line no-param-reassign\n    cache.cache[name] = Object.keys(plugins[name]).map((version) => {\n      return {\n        version,\n        downloadUrl: plugins[name][version]?.url,\n        releaseTimestamp: plugins[name][version]?.buildDate\n          ? new Date(plugins[name][version].buildDate + ' UTC')\n          : null,\n      };\n    });\n  }\n}\n\nasync function getJenkinsUpdateCenterResponse<T>(\n  cache: JenkinsCache<JenkinsCacheTypes>\n): Promise<T> {\n  let response: T;\n\n  const options = {\n    headers: {\n      'Accept-Encoding': 'gzip, deflate, br',\n    },\n  };\n\n  try {\n    logger.debug(`jenkins-plugins: Fetching Jenkins plugns ${cache.name}`);\n    const startTime = Date.now();\n    response = (await http.getJson<T>(cache.dataUrl, options)).body;\n    const durationMs = Math.round(Date.now() - startTime);\n    logger.debug(\n      { durationMs },\n      `jenkins-plugins: Fetched Jenkins plugins ${cache.name}`\n    );\n  } catch (err) /* istanbul ignore next */ {\n    // eslint-disable-next-line no-param-reassign\n    cache.cache = Object.create(null);\n    throw new ExternalHostError(\n      new Error(`jenkins-plugins: Fetch plugins ${cache.name} error`)\n    );\n  }\n\n  return response;\n}\n\nasync function updateJenkinsPluginCache<T>(\n  cache: JenkinsCache<JenkinsCacheTypes>,\n  callback: (resp: T, cache: JenkinsCache<any>) => void\n): Promise<void> {\n  const response = await getJenkinsUpdateCenterResponse<T>(cache);\n  if (response) {\n    callback(response, cache);\n  }\n  cache.lastSync = new Date(); // eslint-disable-line no-param-reassign\n}\n\nconst pluginInfoCache: JenkinsCache<ReleaseResult> = {\n  name: 'info',\n  dataUrl: packageInfoUrl,\n  lastSync: new Date('2000-01-01'),\n  cacheTimeMin: 1440,\n  cache: Object.create(null),\n};\n\nconst pluginVersionsCache: JenkinsCache<Release[]> = {\n  name: 'versions',\n  dataUrl: packageVersionsUrl,\n  lastSync: new Date('2000-01-01'),\n  cacheTimeMin: 60,\n  cache: Object.create(null),\n};\n\nasync function updateJenkinsPluginInfoCache(): Promise<void> {\n  await updateJenkinsPluginCache<JenkinsPluginsInfoResponse>(\n    pluginInfoCache,\n    updateJenkinsPluginInfoCacheCallback\n  );\n}\n\nasync function updateJenkinsPluginVersionsCache(): Promise<void> {\n  await updateJenkinsPluginCache<JenkinsPluginsVersionsResponse>(\n    pluginVersionsCache,\n    updateJenkinsPluginVersionsCacheCallback\n  );\n}\n\nexport async function getJenkinsPluginDependency(\n  lookupName: string\n): Promise<ReleaseResult | null> {\n  logger.debug(`getJenkinsDependency(${lookupName})`);\n  await updateJenkinsCache(pluginInfoCache, updateJenkinsPluginInfoCache);\n  await updateJenkinsCache(\n    pluginVersionsCache,\n    updateJenkinsPluginVersionsCache\n  );\n\n  const plugin = pluginInfoCache.cache[lookupName];\n  if (!plugin) {\n    return null;\n  }\n\n  const result = clone(plugin);\n  const releases = pluginVersionsCache.cache[lookupName];\n  result.releases = releases ? clone(releases) : [];\n  return result;\n}\n\nexport function getReleases({\n  lookupName,\n}: GetReleasesConfig): Promise<ReleaseResult | null> {\n  return getJenkinsPluginDependency(lookupName);\n}\n\nfunction resetJenkinsCache(cache: JenkinsCache<JenkinsCacheTypes>): void {\n  // eslint-disable-next-line no-param-reassign\n  cache.lastSync = new Date('2000-01-01');\n  cache.cache = Object.create(null); // eslint-disable-line no-param-reassign\n}\n\n// Note: use only for tests\nexport function resetCache(): void {\n  resetJenkinsCache(pluginInfoCache);\n  resetJenkinsCache(pluginVersionsCache);\n}\n"]}