{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/datasource/pypi/index.ts"],"names":[],"mappings":"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","sourcesContent":["import url from 'url';\nimport changelogFilenameRegex from 'changelog-filename-regex';\nimport { parse } from 'node-html-parser';\nimport { logger } from '../../logger';\nimport { Http } from '../../util/http';\nimport { ensureTrailingSlash } from '../../util/url';\nimport { matches } from '../../versioning/pep440';\nimport * as pep440 from '../../versioning/pep440';\nimport { GetReleasesConfig, Release, ReleaseResult } from '../common';\n\nexport const id = 'pypi';\nexport const defaultRegistryUrls = [\n  process.env.PIP_INDEX_URL || 'https://pypi.org/pypi/',\n];\nexport const registryStrategy = 'merge';\n\nconst github_repo_pattern = /^https?:\\/\\/github\\.com\\/[^\\\\/]+\\/[^\\\\/]+$/;\nconst http = new Http(id);\n\ntype Releases = Record<\n  string,\n  {\n    requires_python?: boolean;\n    upload_time?: string;\n    yanked?: boolean;\n  }[]\n>;\ntype PypiJSON = {\n  info: {\n    name: string;\n    home_page?: string;\n    project_urls?: Record<string, string>;\n  };\n\n  releases?: Releases;\n};\n\nfunction normalizeName(input: string): string {\n  return input.toLowerCase().replace(/(-|\\.)/g, '_');\n}\n\nfunction compatibleVersions(\n  releases: Releases,\n  compatibility: Record<string, string>\n): string[] {\n  const versions = Object.keys(releases);\n  if (!(compatibility?.python && pep440.isVersion(compatibility.python))) {\n    return versions;\n  }\n  return versions.filter((version) =>\n    releases[version].some((release) => {\n      if (!release.requires_python) {\n        return true;\n      }\n      return matches(compatibility.python, release.requires_python);\n    })\n  );\n}\n\nasync function getDependency(\n  packageName: string,\n  hostUrl: string,\n  compatibility: Record<string, string>\n): Promise<ReleaseResult | null> {\n  const lookupUrl = url.resolve(hostUrl, `${packageName}/json`);\n  const dependency: ReleaseResult = { releases: null };\n  logger.trace({ lookupUrl }, 'Pypi api got lookup');\n  const rep = await http.getJson<PypiJSON>(lookupUrl);\n  const dep = rep?.body;\n  if (!dep) {\n    logger.trace({ dependency: packageName }, 'pip package not found');\n    return null;\n  }\n  logger.trace({ lookupUrl }, 'Got pypi api result');\n  if (\n    !(dep.info && normalizeName(dep.info.name) === normalizeName(packageName))\n  ) {\n    logger.warn(\n      { lookupUrl, lookupName: packageName, returnedName: dep.info.name },\n      'Returned name does not match with requested name'\n    );\n    return null;\n  }\n\n  if (dep.info?.home_page) {\n    dependency.homepage = dep.info.home_page;\n    if (github_repo_pattern.exec(dep.info.home_page)) {\n      dependency.sourceUrl = dep.info.home_page.replace('http://', 'https://');\n    }\n  }\n\n  if (dep.info?.project_urls) {\n    for (const [name, projectUrl] of Object.entries(dep.info.project_urls)) {\n      const lower = name.toLowerCase();\n\n      if (\n        !dependency.sourceUrl &&\n        (lower.startsWith('repo') ||\n          lower === 'code' ||\n          lower === 'source' ||\n          github_repo_pattern.exec(projectUrl))\n      ) {\n        dependency.sourceUrl = projectUrl;\n      }\n\n      if (\n        !dependency.changelogUrl &&\n        ([\n          'changelog',\n          'change log',\n          'changes',\n          'release notes',\n          'news',\n          \"what's new\",\n        ].includes(lower) ||\n          changelogFilenameRegex.exec(lower))\n      ) {\n        // from https://github.com/pypa/warehouse/blob/418c7511dc367fb410c71be139545d0134ccb0df/warehouse/templates/packaging/detail.html#L24\n        dependency.changelogUrl = projectUrl;\n      }\n    }\n  }\n\n  dependency.releases = [];\n  if (dep.releases) {\n    const versions = compatibleVersions(dep.releases, compatibility);\n    dependency.releases = versions.map((version) => {\n      const releases = dep.releases[version] || [];\n      const { upload_time: releaseTimestamp } = releases[0] || {};\n      const isDeprecated = releases.some(({ yanked }) => yanked);\n      const result: Release = {\n        version,\n        releaseTimestamp,\n      };\n      if (isDeprecated) {\n        result.isDeprecated = isDeprecated;\n      }\n      return result;\n    });\n  }\n  return dependency;\n}\n\nfunction extractVersionFromLinkText(\n  text: string,\n  packageName: string\n): string | null {\n  const srcPrefixes = [`${packageName}-`, `${packageName.replace(/-/g, '_')}-`];\n  for (const prefix of srcPrefixes) {\n    const suffix = '.tar.gz';\n    if (text.startsWith(prefix) && text.endsWith(suffix)) {\n      return text.replace(prefix, '').replace(/\\.tar\\.gz$/, '');\n    }\n  }\n\n  // pep-0427 wheel packages\n  //  {distribution}-{version}(-{build tag})?-{python tag}-{abi tag}-{platform tag}.whl.\n  const wheelPrefix = packageName.replace(/[^\\w\\d.]+/g, '_') + '-';\n  const wheelSuffix = '.whl';\n  if (\n    text.startsWith(wheelPrefix) &&\n    text.endsWith(wheelSuffix) &&\n    text.split('-').length > 2\n  ) {\n    return text.split('-')[1];\n  }\n\n  return null;\n}\n\nasync function getSimpleDependency(\n  packageName: string,\n  hostUrl: string\n): Promise<ReleaseResult | null> {\n  const lookupUrl = url.resolve(hostUrl, `${packageName}`);\n  const dependency: ReleaseResult = { releases: null };\n  const response = await http.get(lookupUrl);\n  const dep = response?.body;\n  if (!dep) {\n    logger.trace({ dependency: packageName }, 'pip package not found');\n    return null;\n  }\n  const root: HTMLElement = parse(dep.replace(/<\\/?pre>/, '')) as any;\n  const links = root.querySelectorAll('a');\n  const releases = new Map<string, Release>();\n  for (const link of Array.from(links)) {\n    const version = extractVersionFromLinkText(link.text, packageName);\n    if (version) {\n      const release = releases.get(version) || { version };\n      const isDeprecated = link.hasAttribute('data-yanked');\n      if (isDeprecated) {\n        release.isDeprecated = isDeprecated;\n      }\n      releases.set(version, release);\n    }\n  }\n  dependency.releases = [...releases.values()];\n  return dependency;\n}\n\nexport async function getReleases({\n  compatibility,\n  lookupName,\n  registryUrl,\n}: GetReleasesConfig): Promise<ReleaseResult | null> {\n  const hostUrl = ensureTrailingSlash(registryUrl);\n\n  // not all simple indexes use this identifier, but most do\n  if (hostUrl.endsWith('/simple/') || hostUrl.endsWith('/+simple/')) {\n    logger.trace({ lookupName, hostUrl }, 'Looking up pypi simple dependency');\n    return getSimpleDependency(lookupName, hostUrl);\n  }\n\n  logger.trace({ lookupName, hostUrl }, 'Looking up pypi api dependency');\n  try {\n    // we need to resolve early here so we can catch any 404s and fallback to a simple lookup\n    const releases = await getDependency(lookupName, hostUrl, compatibility);\n    // the dep was found in the json api, return as-is\n    return releases;\n  } catch (err) {\n    if (err.statusCode !== 404) {\n      throw err;\n    }\n\n    // error contacting json-style api -- attempt to fallback to a simple-style api\n    logger.trace(\n      { lookupName, hostUrl },\n      'Looking up pypi simple dependency via fallback'\n    );\n    const releases = await getSimpleDependency(lookupName, hostUrl);\n    return releases;\n  }\n}\n"]}