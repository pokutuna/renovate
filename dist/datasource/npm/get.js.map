{"version":3,"file":"get.js","sourceRoot":"","sources":["../../../lib/datasource/npm/get.ts"],"names":[],"mappings":"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","sourcesContent":["import { OutgoingHttpHeaders } from 'http';\nimport url from 'url';\nimport is from '@sindresorhus/is';\nimport delay from 'delay';\nimport moment from 'moment';\nimport registryAuthToken from 'registry-auth-token';\nimport getRegistryUrl from 'registry-auth-token/registry-url';\nimport { logger } from '../../logger';\nimport { ExternalHostError } from '../../types/errors/external-host-error';\nimport * as packageCache from '../../util/cache/package';\nimport { find } from '../../util/host-rules';\nimport { Http, HttpOptions } from '../../util/http';\nimport { maskToken } from '../../util/mask';\nimport { Release, ReleaseResult } from '../common';\nimport { id } from './common';\nimport { getNpmrc } from './npmrc';\n\nconst http = new Http(id);\n\nlet memcache: Record<string, string> = {};\n\nexport function resetMemCache(): void {\n  logger.debug('resetMemCache()');\n  memcache = {};\n}\n\nexport function resetCache(): void {\n  resetMemCache();\n}\n\nexport interface NpmRelease extends Release {\n  canBeUnpublished?: boolean;\n  gitRef?: string;\n}\nexport interface NpmDependency extends ReleaseResult {\n  releases: NpmRelease[];\n  deprecationSource?: string;\n  name: string;\n  homepage: string;\n  latestVersion: string;\n  sourceUrl: string;\n  versions: Record<string, any>;\n  'dist-tags': Record<string, string>;\n  'renovate-config': any;\n  sourceDirectory?: string;\n}\n\nexport async function getDependency(\n  packageName: string,\n  retries = 3\n): Promise<NpmDependency | null> {\n  logger.trace(`npm.getDependency(${packageName})`);\n\n  // This is our datastore cache and is cleared at the end of each repo, i.e. we never requery/revalidate during a \"run\"\n  if (memcache[packageName]) {\n    logger.trace('Returning cached result');\n    return JSON.parse(memcache[packageName]);\n  }\n\n  const scope = packageName.split('/')[0];\n  let regUrl: string;\n  const npmrc = getNpmrc();\n  try {\n    regUrl = getRegistryUrl(scope, npmrc);\n  } catch (err) {\n    regUrl = 'https://registry.npmjs.org';\n  }\n  const pkgUrl = url.resolve(\n    regUrl,\n    encodeURIComponent(packageName).replace(/^%40/, '@')\n  );\n  // Now check the persistent cache\n  const cacheNamespace = 'datasource-npm';\n  const cachedResult = await packageCache.get<NpmDependency>(\n    cacheNamespace,\n    pkgUrl\n  );\n  // istanbul ignore if\n  if (cachedResult) {\n    return cachedResult;\n  }\n  const headers: OutgoingHttpHeaders = {};\n  let authInfo = registryAuthToken(regUrl, { npmrc, recursive: true });\n\n  if (\n    !authInfo &&\n    npmrc &&\n    npmrc._authToken &&\n    regUrl.replace(/\\/?$/, '/') === npmrc.registry?.replace(/\\/?$/, '/')\n  ) {\n    authInfo = { type: 'Bearer', token: npmrc._authToken };\n  }\n\n  if (authInfo?.type && authInfo.token) {\n    headers.authorization = `${authInfo.type} ${authInfo.token}`;\n    logger.trace(\n      { token: maskToken(authInfo.token), npmName: packageName },\n      'Using auth (via npmrc) for npm lookup'\n    );\n  } else if (process.env.NPM_TOKEN && process.env.NPM_TOKEN !== 'undefined') {\n    logger.trace(\n      { token: maskToken(process.env.NPM_TOKEN), npmName: packageName },\n      'Using auth (via process.env.NPM_TOKEN) for npm lookup'\n    );\n    headers.authorization = `Bearer ${process.env.NPM_TOKEN}`;\n  } else {\n    const opts = find({\n      hostType: 'npm',\n      url: regUrl,\n    });\n    if (opts.token) {\n      logger.trace(\n        { token: maskToken(opts.token), npmName: packageName },\n        'Using auth (via hostRules) for npm lookup'\n      );\n      headers.authorization = `Bearer ${opts.token}`;\n    }\n  }\n\n  const uri = url.parse(pkgUrl);\n\n  if (uri.host === 'registry.npmjs.org' && !uri.pathname.startsWith('/@')) {\n    // Delete the authorization header for non-scoped public packages to improve http caching\n    // Otherwise, authenticated requests are not cacheable until the registry adds \"public\" to Cache-Control\n    // Ref: https://greenbytes.de/tech/webdav/rfc7234.html#caching.authenticated.responses\n    delete headers.authorization;\n  }\n\n  // This tells our http layer not to serve responses directly from the cache and instead to revalidate them every time\n  headers['Cache-Control'] = 'no-cache';\n\n  try {\n    const useCache = retries === 3; // Disable cache if we're retrying\n    const opts: HttpOptions = {\n      headers,\n      useCache,\n    };\n    // TODO: fix type\n    const raw = await http.getJson<any>(pkgUrl, opts);\n    if (retries < 3) {\n      logger.debug({ pkgUrl, retries }, 'Recovered from npm error');\n    }\n    const res = raw.body;\n    // eslint-disable-next-line no-underscore-dangle\n    const returnedName = res.name ? res.name : res._id || '';\n    if (returnedName.toLowerCase() !== packageName.toLowerCase()) {\n      logger.warn(\n        { lookupName: packageName, returnedName: res.name, regUrl },\n        'Returned name does not match with requested name'\n      );\n      return null;\n    }\n    if (!res.versions || !Object.keys(res.versions).length) {\n      // Registry returned a 200 OK but with no versions\n      logger.debug({ dependency: packageName }, 'No versions returned');\n      return null;\n    }\n\n    const latestVersion = res.versions[res['dist-tags'].latest];\n    res.repository = res.repository || latestVersion.repository;\n    res.homepage = res.homepage || latestVersion.homepage;\n\n    // Determine repository URL\n    let sourceUrl: string;\n\n    if (res.repository) {\n      if (is.string(res.repository)) {\n        sourceUrl = res.repository;\n      } else if (res.repository.url) {\n        sourceUrl = res.repository.url;\n      }\n    }\n    // Simplify response before caching and returning\n    const dep: NpmDependency = {\n      name: res.name,\n      homepage: res.homepage,\n      latestVersion: res['dist-tags'].latest,\n      sourceUrl,\n      versions: {},\n      releases: null,\n      'dist-tags': res['dist-tags'],\n      'renovate-config': latestVersion['renovate-config'],\n    };\n    if (res.repository?.directory) {\n      dep.sourceDirectory = res.repository.directory;\n    }\n    if (latestVersion.deprecated) {\n      dep.deprecationMessage = `On registry \\`${regUrl}\\`, the \"latest\" version (v${dep.latestVersion}) of dependency \\`${packageName}\\` has the following deprecation notice:\\n\\n\\`${latestVersion.deprecated}\\`\\n\\nMarking the latest version of an npm package as deprecated results in the entire package being considered deprecated, so contact the package author you think this is a mistake.`;\n      dep.deprecationSource = id;\n    }\n    dep.releases = Object.keys(res.versions).map((version) => {\n      const release: NpmRelease = {\n        version,\n        gitRef: res.versions[version].gitHead,\n      };\n      if (res.time?.[version]) {\n        release.releaseTimestamp = res.time[version];\n        release.canBeUnpublished =\n          moment().diff(moment(release.releaseTimestamp), 'days') === 0;\n      }\n      if (res.versions[version].deprecated) {\n        release.isDeprecated = true;\n      }\n      return release;\n    });\n    logger.trace({ dep }, 'dep');\n    // serialize first before saving\n    memcache[packageName] = JSON.stringify(dep);\n    const cacheMinutes = process.env.RENOVATE_CACHE_NPM_MINUTES\n      ? parseInt(process.env.RENOVATE_CACHE_NPM_MINUTES, 10)\n      : 5;\n    // TODO: use dynamic detection of public repos instead of a static list\n    const whitelistedPublicScopes = [\n      '@graphql-codegen',\n      '@storybook',\n      '@types',\n      '@typescript-eslint',\n    ];\n    if (\n      whitelistedPublicScopes.includes(scope) ||\n      !packageName.startsWith('@')\n    ) {\n      await packageCache.set(cacheNamespace, pkgUrl, dep, cacheMinutes);\n    }\n    return dep;\n  } catch (err) {\n    if (err.statusCode === 401 || err.statusCode === 403) {\n      logger.debug(\n        {\n          pkgUrl,\n          authInfoType: authInfo ? authInfo.type : undefined,\n          authInfoToken: authInfo ? maskToken(authInfo.token) : undefined,\n          err,\n          statusCode: err.statusCode,\n          packageName,\n        },\n        `Dependency lookup failure: unauthorized`\n      );\n      return null;\n    }\n    if (err.statusCode === 402) {\n      logger.debug(\n        {\n          pkgUrl,\n          authInfoType: authInfo ? authInfo.type : undefined,\n          authInfoToken: authInfo ? maskToken(authInfo.token) : undefined,\n          err,\n          statusCode: err.statusCode,\n          packageName,\n        },\n        `Dependency lookup failure: payent required`\n      );\n      return null;\n    }\n    if (err.statusCode === 404 || err.code === 'ENOTFOUND') {\n      logger.debug({ packageName }, `Dependency lookup failure: not found`);\n      logger.debug({\n        err,\n        token: authInfo ? maskToken(authInfo.token) : 'none',\n      });\n      return null;\n    }\n    if (uri.host === 'registry.npmjs.org') {\n      // istanbul ignore if\n      if (\n        (err.name === 'ParseError' ||\n          err.code === 'ECONNRESET' ||\n          err.code === 'ETIMEDOUT') &&\n        retries > 0\n      ) {\n        // Delay a random time to avoid contention\n        const delaySeconds = 5 + Math.round(Math.random() * 25);\n        logger.warn(\n          { pkgUrl, errName: err.name, delaySeconds },\n          'Retrying npm error'\n        );\n        await delay(1000 * delaySeconds);\n        return getDependency(packageName, retries - 1);\n      }\n      // istanbul ignore if\n      if (err.name === 'ParseError' && err.body) {\n        err.body = 'err.body deleted by Renovate';\n      }\n      throw new ExternalHostError(err);\n    }\n    return null;\n  }\n}\n"]}