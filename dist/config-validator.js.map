{"version":3,"file":"config-validator.js","sourceRoot":"","sources":["../lib/config-validator.ts"],"names":[],"mappings":"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","sourcesContent":["#!/usr/bin/env node\n// istanbul ignore file\nimport { readFileSync } from 'fs-extra';\nimport JSON5 from 'json5';\nimport { configFileNames } from './config/app-strings';\nimport { RenovateConfig } from './config/common';\nimport { getConfig } from './config/file';\nimport { massageConfig } from './config/massage';\nimport { validateConfig } from './config/validation';\n\n/* eslint-disable no-console */\n\nlet returnVal = 0;\n\nasync function validate(\n  desc: string,\n  config: RenovateConfig,\n  isPreset = false\n): Promise<void> {\n  const res = await validateConfig(massageConfig(config), isPreset);\n  if (res.errors.length) {\n    console.log(\n      `${desc} contains errors:\\n\\n${JSON.stringify(res.errors, null, 2)}`\n    );\n    returnVal = 1;\n  }\n  if (res.warnings.length) {\n    console.log(\n      `${desc} contains warnings:\\n\\n${JSON.stringify(res.warnings, null, 2)}`\n    );\n    returnVal = 1;\n  }\n}\n\ntype PackageJson = {\n  renovate?: RenovateConfig;\n  'renovate-config'?: Record<string, RenovateConfig>;\n};\n\n(async () => {\n  for (const file of configFileNames.filter(\n    (name) => name !== 'package.json'\n  )) {\n    try {\n      const rawContent = readFileSync(file, 'utf8');\n      console.log(`Validating ${file}`);\n      try {\n        let jsonContent;\n        if (file.endsWith('.json5')) {\n          jsonContent = JSON5.parse(rawContent) as PackageJson;\n        } else {\n          jsonContent = JSON.parse(rawContent) as PackageJson;\n        }\n        await validate(file, jsonContent);\n      } catch (err) {\n        console.log(`${file} is not valid Renovate config`, err);\n        returnVal = 1;\n      }\n    } catch (err) {\n      // file does not exist\n    }\n  }\n  try {\n    const pkgJson = JSON.parse(\n      readFileSync('package.json', 'utf8')\n    ) as PackageJson;\n    if (pkgJson.renovate) {\n      console.log(`Validating package.json > renovate`);\n      await validate('package.json > renovate', pkgJson.renovate);\n    }\n    if (pkgJson['renovate-config']) {\n      console.log(`Validating package.json > renovate-config`);\n      for (const presetConfig of Object.values(pkgJson['renovate-config'])) {\n        await validate('package.json > renovate-config', presetConfig, true);\n      }\n    }\n  } catch (err) {\n    // ignore\n  }\n  try {\n    const fileConfig = getConfig(process.env);\n    console.log(`Validating config.js`);\n    try {\n      await validate('config.js', fileConfig);\n    } catch (err) {\n      console.log(`config.js is not valid Renovate config`);\n      returnVal = 1;\n    }\n  } catch (err) {\n    // ignore\n  }\n  if (returnVal !== 0) {\n    process.exit(returnVal);\n  }\n  console.log('OK');\n})().catch((e) => {\n  console.error(e);\n  process.exit(99);\n});\n"]}