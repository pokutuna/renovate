{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../lib/platform/github/types.ts"],"names":[],"mappings":"","sourcesContent":["import { Pr } from '../common';\n\n// https://developer.github.com/v3/repos/statuses\n// https://developer.github.com/v3/checks/runs/\nexport type CombinedBranchState = 'failure' | 'pending' | 'success';\nexport type BranchState = 'failure' | 'pending' | 'success' | 'error';\n\nexport interface GhBranchStatus {\n  context: string;\n  state: BranchState;\n}\n\nexport interface CombinedBranchStatus {\n  state: CombinedBranchState;\n  statuses: GhBranchStatus[];\n}\n\nexport interface Comment {\n  id: number;\n  body: string;\n}\n\nexport interface GhPr extends Pr {\n  comments: Comment[];\n}\n\nexport interface LocalRepoConfig {\n  repositoryName: string;\n  pushProtection: boolean;\n  prReviewsRequired: boolean;\n  repoForceRebase?: boolean;\n  parentRepo: string;\n  forkMode?: boolean;\n  forkToken?: string;\n  closedPrList: PrList | null;\n  openPrList: PrList | null;\n  prList: GhPr[] | null;\n  issueList: any[] | null;\n  mergeMethod: string;\n  defaultBranch: string;\n  defaultBranchSha?: string;\n  repositoryOwner: string;\n  repository: string | null;\n  localDir: string;\n  isGhe: boolean;\n  renovateUsername: string;\n  productLinks: any;\n}\n\nexport type BranchProtection = any;\nexport type PrList = Record<number, GhPr>;\n\nexport interface GhRepo {\n  isFork: boolean;\n  isArchived: boolean;\n  nameWithOwner: string;\n  mergeCommitAllowed: boolean;\n  rebaseMergeAllowed: boolean;\n  squashMergeAllowed: boolean;\n  defaultBranchRef: {\n    name: string;\n    target: {\n      oid: string;\n    };\n  };\n}\n"]}