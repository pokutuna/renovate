{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../../lib/platform/bitbucket-server/utils.ts"],"names":[],"mappings":"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","sourcesContent":["// SEE for the reference https://github.com/renovatebot/renovate/blob/c3e9e572b225085448d94aa121c7ec81c14d3955/lib/platform/bitbucket/utils.js\nimport url from 'url';\nimport {\n  PR_STATE_CLOSED,\n  PR_STATE_MERGED,\n  PR_STATE_OPEN,\n} from '../../constants/pull-requests';\nimport { HttpResponse } from '../../util/http';\nimport { BitbucketServerHttp } from '../../util/http/bitbucket-server';\nimport { BbbsRestPr, BbsPr } from './types';\n\nconst bitbucketServerHttp = new BitbucketServerHttp();\n\n// https://docs.atlassian.com/bitbucket-server/rest/6.0.0/bitbucket-rest.html#idp250\nconst prStateMapping: any = {\n  MERGED: PR_STATE_MERGED,\n  DECLINED: PR_STATE_CLOSED,\n  OPEN: PR_STATE_OPEN,\n};\n\nexport function prInfo(pr: BbbsRestPr): BbsPr {\n  return {\n    version: pr.version,\n    number: pr.id,\n    body: pr.description,\n    branchName: pr.fromRef.displayId,\n    targetBranch: pr.toRef.displayId,\n    title: pr.title,\n    state: prStateMapping[pr.state],\n    createdAt: pr.createdDate,\n  };\n}\n\nconst addMaxLength = (inputUrl: string, limit = 100): string => {\n  const { search, ...parsedUrl } = url.parse(inputUrl, true); // eslint-disable-line @typescript-eslint/no-unused-vars\n  const maxedUrl = url.format({\n    ...parsedUrl,\n    query: { ...parsedUrl.query, limit },\n  });\n  return maxedUrl;\n};\n\nfunction callApi<T>(\n  apiUrl: string,\n  method: string,\n  options?: any\n): Promise<HttpResponse<T>> {\n  /* istanbul ignore next */\n  switch (method.toLowerCase()) {\n    case 'post':\n      return bitbucketServerHttp.postJson<T>(apiUrl, options);\n    case 'put':\n      return bitbucketServerHttp.putJson<T>(apiUrl, options);\n    case 'patch':\n      return bitbucketServerHttp.patchJson<T>(apiUrl, options);\n    case 'head':\n      return bitbucketServerHttp.headJson<T>(apiUrl, options);\n    case 'delete':\n      return bitbucketServerHttp.deleteJson<T>(apiUrl, options);\n    case 'get':\n    default:\n      return bitbucketServerHttp.getJson<T>(apiUrl, options);\n  }\n}\n\nexport async function accumulateValues<T = any>(\n  reqUrl: string,\n  method = 'get',\n  options?: any,\n  limit?: number\n): Promise<T[]> {\n  let accumulator: T[] = [];\n  let nextUrl = addMaxLength(reqUrl, limit);\n\n  while (typeof nextUrl !== 'undefined') {\n    // TODO: fix typing\n    const { body } = await callApi<{\n      values: T[];\n      isLastPage: boolean;\n      nextPageStart: string;\n    }>(nextUrl, method, options);\n    accumulator = [...accumulator, ...body.values];\n    if (body.isLastPage !== false) {\n      break;\n    }\n\n    const { search, ...parsedUrl } = url.parse(nextUrl, true); // eslint-disable-line @typescript-eslint/no-unused-vars\n    nextUrl = url.format({\n      ...parsedUrl,\n      query: {\n        ...parsedUrl.query,\n        start: body.nextPageStart,\n      },\n    });\n  }\n\n  return accumulator;\n}\n\nexport interface BitbucketCommitStatus {\n  failed: number;\n  inProgress: number;\n  successful: number;\n}\n\nexport type BitbucketBranchState =\n  | 'SUCCESSFUL'\n  | 'FAILED'\n  | 'INPROGRESS'\n  | 'STOPPED';\n\nexport interface BitbucketStatus {\n  key: string;\n  state: BitbucketBranchState;\n}\n"]}