import { BranchStatus } from '../../types';
import { BranchStatusConfig, CreatePRConfig, EnsureCommentConfig, EnsureCommentRemovalConfig, EnsureIssueConfig, EnsureIssueResult, FindPRConfig, Issue, PlatformParams, PlatformResult, Pr, RepoParams, RepoResult, VulnerabilityAlert } from '../common';
import { BbsPr } from './types';
export declare function initPlatform({ endpoint, username, password, }: PlatformParams): Promise<PlatformResult>;
export declare function getRepos(): Promise<string[]>;
export declare function initRepo({ repository, localDir, optimizeForDisabled, bbUseDefaultReviewers, }: RepoParams): Promise<RepoResult>;
export declare function getRepoForceRebase(): Promise<boolean>;
export declare function setBaseBranch(branchName: string): Promise<string>;
export declare function getPr(prNo: number, refreshCache?: boolean): Promise<BbsPr | null>;
export declare function getPrList(_args?: any): Promise<Pr[]>;
export declare function findPr({ branchName, prTitle, state, refreshCache, }: FindPRConfig): Promise<Pr | null>;
export declare function getBranchPr(branchName: string): Promise<BbsPr | null>;
export declare function refreshPr(number: number): Promise<void>;
export declare function deleteBranch(branchName: string, closePr?: boolean): Promise<void>;
export declare function getBranchStatus(branchName: string, requiredStatusChecks?: string[] | null): Promise<BranchStatus>;
export declare function getBranchStatusCheck(branchName: string, context: string): Promise<BranchStatus | null>;
export declare function setBranchStatus({ branchName, context, description, state, url: targetUrl, }: BranchStatusConfig): Promise<void>;
export declare function findIssue(title: string): Promise<Issue | null>;
export declare function ensureIssue({ title, }: EnsureIssueConfig): Promise<EnsureIssueResult | null>;
export declare function getIssueList(): Promise<Issue[]>;
export declare function ensureIssueClosing(title: string): Promise<void>;
export declare function addAssignees(iid: number, assignees: string[]): Promise<void>;
export declare function addReviewers(prNo: number, reviewers: string[]): Promise<void>;
export declare function deleteLabel(issueNo: number, label: string): Promise<void>;
export declare function ensureComment({ number, topic, content, }: EnsureCommentConfig): Promise<boolean>;
export declare function ensureCommentRemoval({ number: prNo, topic, content, }: EnsureCommentRemovalConfig): Promise<void>;
export declare function createPr({ branchName, targetBranch, prTitle: title, prBody: rawDescription, }: CreatePRConfig): Promise<Pr>;
export declare function updatePr(prNo: number, title: string, rawDescription: string): Promise<void>;
export declare function mergePr(prNo: number, branchName: string): Promise<boolean>;
export declare function getPrBody(input: string): string;
export declare function getVulnerabilityAlerts(): Promise<VulnerabilityAlert[]>;
