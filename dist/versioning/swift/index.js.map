{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/swift/index.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAC5B,kEAAmC;AAEnC,mCAAqD;AAExC,QAAA,EAAE,GAAG,OAAO,CAAC;AACb,QAAA,WAAW,GAAG,OAAO,CAAC;AACtB,QAAA,IAAI,GAAG,CAAC,oCAAoC,CAAC,CAAC;AAC9C,QAAA,cAAc,GAAG,IAAI,CAAC;AACtB,QAAA,wBAAwB,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAE7E,MAAM,EAAE,EAAE,EAAE,QAAQ,EAAE,GAAG,uBAAM,CAAC;AAEhC,MAAM,EACJ,OAAO,EAAE,YAAY,EACrB,aAAa,EACb,aAAa,EACb,KAAK,EAAE,QAAQ,EACf,KAAK,EAAE,QAAQ,EACf,KAAK,EAAE,QAAQ,EACf,SAAS,EACT,KAAK,EACL,UAAU,EACV,GAAG,EACH,EAAE,EAAE,aAAa,EACjB,EAAE,EAAE,MAAM,GACX,GAAG,gBAAM,CAAC;AAEE,QAAA,OAAO,GAAG,CAAC,KAAa,EAAW,EAAE,CAChD,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,qBAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AAC1C,QAAA,SAAS,GAAG,CAAC,KAAa,EAAW,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;AACpE,MAAM,oBAAoB,GAAG,CAAC,QAAkB,EAAE,KAAa,EAAU,EAAE,CACzE,aAAa,CACX,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EACxC,qBAAa,CAAC,KAAK,CAAC,CACrB,CAAC;AACJ,MAAM,oBAAoB,GAAG,CAAC,QAAkB,EAAE,KAAa,EAAU,EAAE,CACzE,aAAa,CACX,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EACxC,qBAAa,CAAC,KAAK,CAAC,CACrB,CAAC;AACJ,MAAM,eAAe,GAAG,CAAC,OAAe,EAAE,KAAa,EAAW,EAAE,CAClE,GAAG,CAAC,OAAO,EAAE,qBAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AACrC,MAAM,OAAO,GAAG,CAAC,OAAe,EAAE,KAAa,EAAW,EAAE,CAC1D,SAAS,CAAC,OAAO,EAAE,qBAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AAE9B,QAAA,GAAG,GAAkB;IAChC,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,WAAW,EAAX,mBAAW;IACX,QAAQ;IACR,YAAY,EAAE,iBAAS;IACvB,aAAa;IACb,eAAe;IACf,eAAe,EAAE,iBAAS;IAC1B,QAAQ;IACR,OAAO,EAAP,eAAO;IACP,SAAS,EAAT,iBAAS;IACT,OAAO;IACP,oBAAoB;IACpB,oBAAoB;IACpB,YAAY;CACb,CAAC;AAEF,kBAAe,WAAG,CAAC","sourcesContent":["import semver from 'semver';\nimport stable from 'semver-stable';\nimport { VersioningApi } from '../common';\nimport { getNewValue, toSemverRange } from './range';\n\nexport const id = 'swift';\nexport const displayName = 'Swift';\nexport const urls = ['https://swift.org/package-manager/'];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies = ['bump', 'extend', 'pin', 'replace'];\n\nconst { is: isStable } = stable;\n\nconst {\n  compare: sortVersions,\n  maxSatisfying,\n  minSatisfying,\n  major: getMajor,\n  minor: getMinor,\n  patch: getPatch,\n  satisfies,\n  valid,\n  validRange,\n  ltr,\n  gt: isGreaterThan,\n  eq: equals,\n} = semver;\n\nexport const isValid = (input: string): boolean =>\n  !!valid(input) || !!validRange(toSemverRange(input));\nexport const isVersion = (input: string): boolean => !!valid(input);\nconst maxSatisfyingVersion = (versions: string[], range: string): string =>\n  maxSatisfying(\n    versions.map((v) => v.replace(/^v/, '')),\n    toSemverRange(range)\n  );\nconst minSatisfyingVersion = (versions: string[], range: string): string =>\n  minSatisfying(\n    versions.map((v) => v.replace(/^v/, '')),\n    toSemverRange(range)\n  );\nconst isLessThanRange = (version: string, range: string): boolean =>\n  ltr(version, toSemverRange(range));\nconst matches = (version: string, range: string): boolean =>\n  satisfies(version, toSemverRange(range));\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getNewValue,\n  getPatch,\n  isCompatible: isVersion,\n  isGreaterThan,\n  isLessThanRange,\n  isSingleVersion: isVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  maxSatisfyingVersion,\n  minSatisfyingVersion,\n  sortVersions,\n};\n\nexport default api;\n"]}