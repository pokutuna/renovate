{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/node/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA,8CAAiD;AA0BxC,wFA1BK,aAAO,OA0BL;AAxBH,QAAA,EAAE,GAAG,MAAM,CAAC;AACZ,QAAA,WAAW,GAAG,SAAS,CAAC;AACxB,QAAA,IAAI,GAAG,EAAE,CAAC;AACV,QAAA,cAAc,GAAG,KAAK,CAAC;AAEpC,SAAS,WAAW,CAAC,EACnB,YAAY,EACZ,aAAa,EACb,WAAW,EACX,SAAS,GACM;IACf,MAAM,GAAG,GAAG,aAAG,CAAC,WAAW,CAAC;QAC1B,YAAY;QACZ,aAAa;QACb,WAAW;QACX,SAAS;KACV,CAAC,CAAC;IACH,IAAI,eAAS,CAAC,GAAG,CAAC,EAAE;QAClB,+BAA+B;QAC/B,OAAO,eAAS,CAAC,GAAG,CAAC,CAAC;KACvB;IACD,OAAO,GAAG,CAAC;AACb,CAAC;AAIY,QAAA,GAAG,GAAkB;IAChC,GAAG,aAAG;IACN,WAAW;CACZ,CAAC;AACF,kBAAe,WAAG,CAAC","sourcesContent":["import { NewValueConfig, VersioningApi } from '../common';\nimport npm, { isValid, isVersion } from '../npm';\n\nexport const id = 'node';\nexport const displayName = 'Node.js';\nexport const urls = [];\nexport const supportsRanges = false;\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  fromVersion,\n  toVersion,\n}: NewValueConfig): string {\n  const res = npm.getNewValue({\n    currentValue,\n    rangeStrategy,\n    fromVersion,\n    toVersion,\n  });\n  if (isVersion(res)) {\n    // normalize out any 'v' prefix\n    return isVersion(res);\n  }\n  return res;\n}\n\nexport { isValid };\n\nexport const api: VersioningApi = {\n  ...npm,\n  getNewValue,\n};\nexport default api;\n"]}