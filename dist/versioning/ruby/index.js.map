{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/ruby/index.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  eq,\n  gt,\n  maxSatisfying,\n  minSatisfying,\n  satisfies,\n  valid,\n} from '@renovatebot/ruby-semver';\nimport { logger } from '../../logger';\nimport { NewValueConfig, VersioningApi } from '../common';\nimport { isSingleOperator, isValidOperator } from './operator';\nimport { ltr, parse as parseRange } from './range';\nimport { bump, pin, replace } from './strategies';\nimport { parse as parseVersion } from './version';\n\nexport const id = 'ruby';\nexport const displayName = 'Ruby';\nexport const urls = [\n  'https://guides.rubygems.org/patterns/',\n  'https://bundler.io/v1.5/gemfile.html',\n  'https://www.devalot.com/articles/2012/04/gem-versions.html',\n];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies = ['bump', 'extend', 'pin', 'replace'];\n\nfunction vtrim<T = unknown>(version: T): string | T {\n  if (typeof version === 'string') {\n    return version.replace(/^v/, '').replace(/('|\")/g, '');\n  }\n  return version;\n}\n\nconst equals = (left: string, right: string): boolean =>\n  eq(vtrim(left), vtrim(right));\n\nconst getMajor = (version: string): number =>\n  parseVersion(vtrim(version)).major;\nconst getMinor = (version: string): number =>\n  parseVersion(vtrim(version)).minor;\nconst getPatch = (version: string): number =>\n  parseVersion(vtrim(version)).patch;\n\nexport const isVersion = (version: string): boolean => !!valid(vtrim(version));\nconst isGreaterThan = (left: string, right: string): boolean =>\n  gt(vtrim(left), vtrim(right));\nconst isLessThanRange = (version: string, range: string): boolean =>\n  ltr(vtrim(version), vtrim(range));\n\nconst isSingleVersion = (range: string): boolean => {\n  const { version, operator } = parseRange(vtrim(range));\n\n  return operator\n    ? isVersion(version) && isSingleOperator(operator)\n    : isVersion(version);\n};\n\nfunction isStable(version: string): boolean {\n  const v = vtrim(version);\n  return parseVersion(v).prerelease ? false : isVersion(v);\n}\n\nexport const isValid = (input: string): boolean =>\n  input\n    .split(',')\n    .map((piece) => vtrim(piece.trim()))\n    .every((range) => {\n      const { version, operator } = parseRange(range);\n\n      return operator\n        ? isVersion(version) && isValidOperator(operator)\n        : isVersion(version);\n    });\n\nexport const matches = (version: string, range: string): boolean =>\n  satisfies(vtrim(version), vtrim(range));\nconst maxSatisfyingVersion = (versions: string[], range: string): string =>\n  maxSatisfying(versions.map(vtrim), vtrim(range));\nconst minSatisfyingVersion = (versions: string[], range: string): string =>\n  minSatisfying(versions.map(vtrim), vtrim(range));\n\nconst getNewValue = ({\n  currentValue,\n  rangeStrategy,\n  fromVersion,\n  toVersion,\n}: NewValueConfig): string => {\n  let newValue = null;\n  if (isVersion(currentValue)) {\n    newValue = currentValue.startsWith('v') ? 'v' + toVersion : toVersion;\n  } else if (currentValue.replace(/^=\\s*/, '') === fromVersion) {\n    newValue = currentValue.replace(fromVersion, toVersion);\n  } else {\n    switch (rangeStrategy) {\n      case 'update-lockfile':\n        if (satisfies(toVersion, currentValue)) {\n          newValue = currentValue;\n        } else {\n          newValue = getNewValue({\n            currentValue,\n            rangeStrategy: 'replace',\n            fromVersion,\n            toVersion,\n          });\n        }\n        break;\n      case 'pin':\n        newValue = pin({ to: vtrim(toVersion) });\n        break;\n      case 'bump':\n        newValue = bump({ range: vtrim(currentValue), to: vtrim(toVersion) });\n        break;\n      case 'replace':\n        newValue = replace({\n          range: vtrim(currentValue),\n          to: vtrim(toVersion),\n        });\n        break;\n      // istanbul ignore next\n      default:\n        logger.warn(`Unsupported strategy ${rangeStrategy}`);\n    }\n  }\n  if (/^('|\")/.exec(currentValue)) {\n    const delimiter = currentValue[0];\n    return newValue\n      .split(',')\n      .map((element) => element.replace(/^(\\s*)/, `$1${delimiter}`))\n      .map((element) => element.replace(/(\\s*)$/, `${delimiter}$1`))\n      .join(',');\n  }\n  return newValue;\n};\n\nexport const sortVersions = (left: string, right: string): number =>\n  gt(vtrim(left), vtrim(right)) ? 1 : -1;\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible: isVersion,\n  isGreaterThan,\n  isLessThanRange,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  maxSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n};\nexport default api;\n"]}