{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/ivy/index.ts"],"names":[],"mappings":";;;;;;AACA,qDAA6B;AAC7B,8CAA0E;AAC1E,mCAIiB;AAEJ,QAAA,EAAE,GAAG,KAAK,CAAC;AACX,QAAA,WAAW,GAAG,KAAK,CAAC;AACpB,QAAA,IAAI,GAAG,CAAC,6BAA6B,CAAC,CAAC;AACvC,QAAA,cAAc,GAAG,IAAI,CAAC;AACtB,QAAA,wBAAwB,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAE7E,6DAA6D;AAC7D,MAAM,EACJ,MAAM,EACN,QAAQ,EACR,QAAQ,EACR,QAAQ,EACR,aAAa,EACb,eAAe,EACf,QAAQ,EACR,OAAO,EAAE,YAAY,EACrB,oBAAoB,EACpB,oBAAoB,EACpB,WAAW,EACX,YAAY,GACb,GAAG,eAAK,CAAC;AAEV,SAAS,SAAS,CAAC,GAAW;IAC5B,IAAI,CAAC,GAAG,EAAE;QACR,OAAO,KAAK,CAAC;KACd;IACD,OAAO,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,4BAAoB,CAAC,GAAG,CAAC,CAAC;AAC7D,CAAC;AAED,SAAS,OAAO,CAAC,CAAS,EAAE,CAAS;IACnC,IAAI,CAAC,CAAC,EAAE;QACN,OAAO,KAAK,CAAC;KACd;IACD,IAAI,CAAC,CAAC,EAAE;QACN,OAAO,KAAK,CAAC;KACd;IACD,MAAM,eAAe,GAAG,4BAAoB,CAAC,CAAC,CAAC,CAAC;IAChD,IAAI,CAAC,eAAe,EAAE;QACpB,OAAO,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;KACrB;IACD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,eAAe,CAAC;IAExC,IAAI,IAAI,KAAK,uBAAe,EAAE;QAC5B,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,CAAC;SACb;QACD,MAAM,MAAM,GAAG,kBAAQ,CAAC,CAAC,CAAC,CAAC;QAC3B,IAAI,MAAM,CAAC,MAAM,EAAE;YACjB,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;YACxC,IAAI,KAAK,CAAC,IAAI,KAAK,wBAAc,EAAE;gBACjC,OAAO,KAAK,CAAC,GAAG,CAAC,WAAW,EAAE,KAAK,KAAK,CAAC;aAC1C;SACF;QACD,OAAO,KAAK,CAAC;KACd;IAED,IAAI,IAAI,KAAK,uBAAe,EAAE;QAC5B,OAAO,sBAAY,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KAC/B;IAED,OAAO,YAAY,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAChC,CAAC;AAEY,QAAA,GAAG,GAAkB;IAChC,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,YAAY,EAAE,SAAS;IACvB,aAAa;IACb,eAAe;IACf,QAAQ;IACR,OAAO,EAAE,SAAS;IAClB,SAAS;IACT,OAAO;IACP,oBAAoB;IACpB,oBAAoB;IACpB,WAAW;IACX,YAAY;CACb,CAAC;AAEF,kBAAe,WAAG,CAAC","sourcesContent":["import { VersioningApi } from '../common';\nimport maven from '../maven';\nimport { TYPE_QUALIFIER, isSubversion, tokenize } from '../maven/compare';\nimport {\n  REV_TYPE_LATEST,\n  REV_TYPE_SUBREV,\n  parseDynamicRevision,\n} from './parse';\n\nexport const id = 'ivy';\nexport const displayName = 'Ivy';\nexport const urls = ['https://ant.apache.org/ivy/'];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies = ['bump', 'extend', 'pin', 'replace'];\n\n// eslint-disable-next-line @typescript-eslint/unbound-method\nconst {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isGreaterThan,\n  isSingleVersion,\n  isStable,\n  matches: mavenMatches,\n  maxSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n} = maven;\n\nfunction isVersion(str: string): string | boolean {\n  if (!str) {\n    return false;\n  }\n  return isSingleVersion(str) || !!parseDynamicRevision(str);\n}\n\nfunction matches(a: string, b: string): boolean {\n  if (!a) {\n    return false;\n  }\n  if (!b) {\n    return false;\n  }\n  const dynamicRevision = parseDynamicRevision(b);\n  if (!dynamicRevision) {\n    return equals(a, b);\n  }\n  const { type, value } = dynamicRevision;\n\n  if (type === REV_TYPE_LATEST) {\n    if (!value) {\n      return true;\n    }\n    const tokens = tokenize(a);\n    if (tokens.length) {\n      const token = tokens[tokens.length - 1];\n      if (token.type === TYPE_QUALIFIER) {\n        return token.val.toLowerCase() === value;\n      }\n    }\n    return false;\n  }\n\n  if (type === REV_TYPE_SUBREV) {\n    return isSubversion(value, a);\n  }\n\n  return mavenMatches(a, value);\n}\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible: isVersion,\n  isGreaterThan,\n  isSingleVersion,\n  isStable,\n  isValid: isVersion,\n  isVersion,\n  matches,\n  maxSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n};\n\nexport default api;\n"]}