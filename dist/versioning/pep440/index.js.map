{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/pep440/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,yDAA2C;AAC3C,8DAAwD;AAExD,mCAAsC;AAEzB,QAAA,EAAE,GAAG,QAAQ,CAAC;AACd,QAAA,WAAW,GAAG,QAAQ,CAAC;AACvB,QAAA,IAAI,GAAG,CAAC,2CAA2C,CAAC,CAAC;AACrD,QAAA,cAAc,GAAG,IAAI,CAAC;AACtB,QAAA,wBAAwB,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;AAE7E,MAAM,EACJ,OAAO,EAAE,YAAY,EACrB,SAAS,EAAE,OAAO,EAClB,KAAK,EAAE,SAAS,EAChB,UAAU,EACV,OAAO,EACP,EAAE,EAAE,aAAa,EACjB,KAAK,EAAE,QAAQ,EACf,KAAK,EAAE,QAAQ,EACf,KAAK,EAAE,QAAQ,EACf,EAAE,GACH,GAAG,MAAM,CAAC;AA4BS,0BAAO;AAAlB,8BAAS;AA1BlB,MAAM,QAAQ,GAAG,CAAC,KAAa,EAAW,EAAE;IAC1C,MAAM,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC;IAC/B,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,KAAK,CAAC;KACd;IACD,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC;AAChC,CAAC,CAAC;AAEF,kEAAkE;AACrD,QAAA,OAAO,GAAG,CAAC,KAAa,EAAU,EAAE,CAC/C,UAAU,CAAC,KAAK,CAAC,IAAI,SAAS,CAAC,KAAK,CAAC,CAAC;AAExC,MAAM,oBAAoB,GAAG,CAAC,QAAkB,EAAE,KAAa,EAAU,EAAE;IACzE,MAAM,KAAK,GAAG,kBAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACzD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC;AAEF,MAAM,oBAAoB,GAAG,CAAC,QAAkB,EAAE,KAAa,EAAU,EAAE;IACzE,MAAM,KAAK,GAAG,kBAAM,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IACzD,OAAO,KAAK,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC9C,CAAC,CAAC;AAEW,QAAA,eAAe,GAAG,CAAC,UAAkB,EAAU,EAAE,CAC5D,SAAS,CAAC,UAAU,CAAC;IACrB,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,SAAS,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;AAI7E,MAAM,MAAM,GAAG,CAAC,QAAgB,EAAE,QAAgB,EAAW,EAAE;IAC7D,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AAC9E,CAAC,CAAC;AAEW,QAAA,GAAG,GAAkB;IAChC,MAAM;IACN,QAAQ;IACR,QAAQ;IACR,QAAQ;IACR,YAAY,EAAE,SAAS;IACvB,aAAa;IACb,eAAe,EAAf,uBAAe;IACf,QAAQ;IACR,OAAO,EAAP,eAAO;IACP,SAAS;IACT,OAAO;IACP,oBAAoB;IACpB,oBAAoB;IACpB,WAAW,EAAX,mBAAW;IACX,YAAY;CACb,CAAC;AAEF,kBAAe,WAAG,CAAC","sourcesContent":["import * as pep440 from '@renovate/pep440';\nimport { filter } from '@renovate/pep440/lib/specifier';\nimport { VersioningApi } from '../common';\nimport { getNewValue } from './range';\n\nexport const id = 'pep440';\nexport const displayName = 'PEP440';\nexport const urls = ['https://www.python.org/dev/peps/pep-0440/'];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies = ['bump', 'extend', 'pin', 'replace'];\n\nconst {\n  compare: sortVersions,\n  satisfies: matches,\n  valid: isVersion,\n  validRange,\n  explain,\n  gt: isGreaterThan,\n  major: getMajor,\n  minor: getMinor,\n  patch: getPatch,\n  eq,\n} = pep440;\n\nconst isStable = (input: string): boolean => {\n  const version = explain(input);\n  if (!version) {\n    return false;\n  }\n  return !version.is_prerelease;\n};\n\n// If this is left as an alias, inputs like \"17.04.0\" throw errors\nexport const isValid = (input: string): string =>\n  validRange(input) || isVersion(input);\n\nconst maxSatisfyingVersion = (versions: string[], range: string): string => {\n  const found = filter(versions, range).sort(sortVersions);\n  return found.length === 0 ? null : found[found.length - 1];\n};\n\nconst minSatisfyingVersion = (versions: string[], range: string): string => {\n  const found = filter(versions, range).sort(sortVersions);\n  return found.length === 0 ? null : found[0];\n};\n\nexport const isSingleVersion = (constraint: string): string =>\n  isVersion(constraint) ||\n  (constraint.startsWith('==') && isVersion(constraint.substring(2).trim()));\n\nexport { isVersion, matches };\n\nconst equals = (version1: string, version2: string): boolean => {\n  return isVersion(version1) && isVersion(version2) && eq(version1, version2);\n};\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible: isVersion,\n  isGreaterThan,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  maxSatisfyingVersion,\n  minSatisfyingVersion,\n  getNewValue,\n  sortVersions,\n};\n\nexport default api;\n"]}