{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../lib/versioning/maven/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { NewValueConfig, VersioningApi } from '../common';\nimport {\n  EXCLUDING_POINT,\n  QualifierTypes,\n  TYPE_NUMBER,\n  TYPE_QUALIFIER,\n  autoExtendMavenRange,\n  compare,\n  isSingleVersion,\n  isValid,\n  isVersion,\n  parseRange,\n  qualifierType,\n  tokenize,\n} from './compare';\n\nexport const id = 'maven';\nexport const displayName = 'Maven';\nexport const urls = [\n  'https://maven.apache.org/pom.html#Dependency_Version_Requirement_Specification',\n  'https://octopus.com/blog/maven-versioning-explained',\n  'https://maven.apache.org/enforcer/enforcer-rules/versionRanges.html',\n];\nexport const supportsRanges = true;\nexport const supportedRangeStrategies = ['bump', 'extend', 'pin', 'replace'];\n\nconst equals = (a: string, b: string): boolean => compare(a, b) === 0;\n\nfunction matches(a: string, b: string): boolean {\n  if (!b) {\n    return false;\n  }\n  if (isVersion(b)) {\n    return equals(a, b);\n  }\n  const ranges = parseRange(b);\n  if (!ranges) {\n    return false;\n  }\n  return ranges.reduce((result, range): any => {\n    if (result) {\n      return result;\n    }\n\n    const { leftType, leftValue, rightType, rightValue } = range;\n\n    let leftResult = true;\n    let rightResult = true;\n\n    if (leftValue) {\n      leftResult =\n        leftType === EXCLUDING_POINT\n          ? compare(leftValue, a) === -1\n          : compare(leftValue, a) !== 1;\n    }\n\n    if (rightValue) {\n      rightResult =\n        rightType === EXCLUDING_POINT\n          ? compare(a, rightValue) === -1\n          : compare(a, rightValue) !== 1;\n    }\n\n    return leftResult && rightResult;\n  }, false);\n}\n\nconst getMajor = (version: string): number | null => {\n  if (isVersion(version)) {\n    const tokens = tokenize(version);\n    const majorToken = tokens[0];\n    return +majorToken.val;\n  }\n  return null;\n};\n\nconst getMinor = (version: string): number | null => {\n  if (isVersion(version)) {\n    const tokens = tokenize(version);\n    const minorToken = tokens[1];\n    if (minorToken && minorToken.type === TYPE_NUMBER) {\n      return +minorToken.val;\n    }\n    return 0;\n  }\n  return null;\n};\n\nconst getPatch = (version: string): number | null => {\n  if (isVersion(version)) {\n    const tokens = tokenize(version);\n    const minorToken = tokens[1];\n    const patchToken = tokens[2];\n    if (\n      patchToken &&\n      minorToken.type === TYPE_NUMBER &&\n      patchToken.type === TYPE_NUMBER\n    ) {\n      return +patchToken.val;\n    }\n    return 0;\n  }\n  return null;\n};\n\nconst isGreaterThan = (a: string, b: string): boolean => compare(a, b) === 1;\n\nconst isStable = (version: string): boolean | null => {\n  if (isVersion(version)) {\n    const tokens = tokenize(version);\n    for (const token of tokens) {\n      if (token.type === TYPE_QUALIFIER) {\n        const qualType = qualifierType(token);\n        if (qualType && qualType < QualifierTypes.Release) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n  return null;\n};\n\nconst maxSatisfyingVersion = (versions: string[], range: string): string => {\n  // istanbul ignore next\n  return versions.reduce((result, version) => {\n    if (matches(version, range)) {\n      if (!result) {\n        return version;\n      }\n      if (isGreaterThan(version, result)) {\n        return version;\n      }\n    }\n    return result;\n  }, null);\n};\n\nfunction getNewValue({\n  currentValue,\n  rangeStrategy,\n  toVersion,\n}: NewValueConfig): string | null {\n  if (isVersion(currentValue) || rangeStrategy === 'pin') {\n    return toVersion;\n  }\n  return autoExtendMavenRange(currentValue, toVersion);\n}\n\nexport { isValid };\n\nexport const api: VersioningApi = {\n  equals,\n  getMajor,\n  getMinor,\n  getPatch,\n  isCompatible: isVersion,\n  isGreaterThan,\n  isSingleVersion,\n  isStable,\n  isValid,\n  isVersion,\n  matches,\n  maxSatisfyingVersion,\n  minSatisfyingVersion: maxSatisfyingVersion,\n  getNewValue,\n  sortVersions: compare,\n};\n\nexport default api;\n"]}